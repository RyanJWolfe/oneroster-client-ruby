{
  "openapi" : "3.0.1",
  "info" : {
    "contact" : {
      "email" : "platform@strongmind.com",
      "name" : "Team Platform",
      "url" : "http://www.strongmind.com"
    },
    "description" : "The OneRoster service binding is available in WSDL/XSD and REST/JSON. The model is based upon the IMS PSM modelling approach.",
    "license" : {
      "name" : "IMS Global",
      "url" : "https://www.imsglobal.org/license.html"
    },
    "title" : "OneRoster OpenAPI (JSON) Definition",
    "version" : "1.1"
  },
  "servers" : [ {
    "url" : "/"
  } ],
  "security" : [ {
    "OAuth2Security" : [ "user" ]
  } ],
  "tags" : [ {
    "description" : "This enables the management of academic sessions i.e. periods of academic activity.",
    "name" : "AcademicSessionsManagement"
  }, {
    "description" : "This enables the management of Categories i.e. collections of LineItems.",
    "name" : "CategoriesManagement"
  }, {
    "description" : "This enables the management of Classes i.e. scheduled learning of courses.",
    "name" : "ClassesManagement"
  }, {
    "description" : "This enables the management of Courses i.e. programme of study.",
    "name" : "CoursesManagement"
  }, {
    "description" : "This enables the management of demographics information (each assigned to a specific user).",
    "name" : "DemographicsManagement"
  }, {
    "description" : "This enables the management of the enrollments of users (teachers, students, etc.) on classes supplied by schools.",
    "name" : "EnrollmentsManagement"
  }, {
    "description" : "This enables the management of grading periods i.e. specific academic sessions.",
    "name" : "GradingPeriodsManagement"
  }, {
    "description" : "This enables the management of lineItems i.e. the set of results for the asessment of some activity.",
    "name" : "LineItemsManagement"
  }, {
    "description" : "This enables the management of orgs i.e. an organization involved in the learning in some form or other.",
    "name" : "OrgsManagement"
  }, {
    "description" : "This enables the management of information about resources i.e. the allocation of resources to classes and/or courses. This excludes the exchange of the actual resources themselves.",
    "name" : "ResourcesManagement"
  }, {
    "description" : "This enables the management of results i.e. the score allocated to a learner from the assessent of a learning activity. Resukt are collecetd as a set of 'lineItems'.",
    "name" : "ResultsManagement"
  }, {
    "description" : "This enables the management of information about schools. A school is a type of 'org'.",
    "name" : "SchoolsManagement"
  }, {
    "description" : "This enables the management of information about students (a student is a type of 'user').",
    "name" : "StudentsManagement"
  }, {
    "description" : "This enables the management of information about teachers (a teacher is a type of 'user').",
    "name" : "TeachersManagement"
  }, {
    "description" : "This enables the management of information about terms (a term is a type of 'academicSession').",
    "name" : "TermsManagement"
  }, {
    "description" : "This enables the management of information about users (this includes the set of 'students' and 'teachers').",
    "name" : "UsersManagement"
  } ],
  "paths" : {
    "/academicSessions" : {
      "get" : {
        "description" : "To read, get, a collection of academic sessions i.e. all academic sessions.",
        "operationId" : "getAcademicSessions",
        "parameters" : [ {
          "allowEmptyValue" : false,
          "description" : "To define the download segmentation value i.e. the maximum number of records to be contained in the response.",
          "in" : "query",
          "name" : "limit",
          "schema" : {
            "default" : 100,
            "format" : "int32",
            "minimum" : 1,
            "type" : "integer"
          }
        }, {
          "allowEmptyValue" : false,
          "description" : "The number of the first record to be supplied in the segmented response message.",
          "in" : "query",
          "name" : "offset",
          "schema" : {
            "default" : 0,
            "format" : "int32",
            "minimum" : 0,
            "type" : "integer"
          }
        }, {
          "allowEmptyValue" : false,
          "description" : "Allows the client to resume retrieving results from where the previous page left off",
          "in" : "query",
          "name" : "continuationToken",
          "schema" : {
            "type" : "string"
          }
        }, {
          "allowEmptyValue" : false,
          "description" : "Identifies the sort criteria to be used for the records in the response message. Use with the orderBy parameter.",
          "in" : "query",
          "name" : "sort",
          "schema" : {
            "type" : "string"
          }
        }, {
          "allowEmptyValue" : false,
          "description" : "The form of ordering for response to the sorted request i.e. ascending (asc) or descending (desc).",
          "in" : "query",
          "name" : "orderBy",
          "schema" : {
            "enum" : [ "acs", "desc" ],
            "type" : "string"
          }
        }, {
          "allowEmptyValue" : false,
          "description" : "The filtering rules to be applied when identifying the records to be supplied in the response message.",
          "in" : "query",
          "name" : "filter",
          "schema" : {
            "type" : "string"
          }
        }, {
          "allowEmptyValue" : false,
          "description" : "To identify the range of fields that should be supplied in the response message.",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MultipleAcademicSessions.Type"
                }
              }
            },
            "description" : "...tbd...",
            "headers" : {
              "X-Total-Count" : {
                "description" : "The total number of resources that are available",
                "schema" : {
                  "type" : "integer"
                }
              }
            }
          },
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/imsx_StatusInfo.Type"
                }
              }
            },
            "description" : "StatusInfo Error Report"
          }
        },
        "summary" : "The REST read request message for the getAcademicSessions() API call.",
        "tags" : [ "AcademicSessionsManagement" ]
      }
    },
    "/academicSessions/{sourcedId}" : {
      "get" : {
        "description" : "To read, get, a specific academic session.",
        "operationId" : "getAcademicSession",
        "parameters" : [ {
          "description" : "The unique identifier for this academic session.",
          "in" : "path",
          "name" : "sourcedId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SingleAcademicSession.Type"
                }
              }
            },
            "description" : "...tbd...",
            "headers" : {
              "X-Total-Count" : {
                "description" : "The total number of resources that are available",
                "schema" : {
                  "type" : "integer"
                }
              }
            }
          },
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/imsx_StatusInfo.Type"
                }
              }
            },
            "description" : "StatusInfo Error Report"
          }
        },
        "summary" : "The REST read request message for the getAcademicSession() API call.",
        "tags" : [ "AcademicSessionsManagement" ]
      }
    },
    "/categories" : {
      "get" : {
        "description" : "...not supplied...",
        "operationId" : "getCategories",
        "parameters" : [ {
          "allowEmptyValue" : false,
          "description" : "To define the download segmentation value i.e. the maximum number of records to be contained in the response.",
          "in" : "query",
          "name" : "limit",
          "schema" : {
            "default" : 100,
            "format" : "int32",
            "minimum" : 1,
            "type" : "integer"
          }
        }, {
          "allowEmptyValue" : false,
          "description" : "The number of the first record to be supplied in the segmented response message.",
          "in" : "query",
          "name" : "offset",
          "schema" : {
            "default" : 0,
            "format" : "int32",
            "minimum" : 0,
            "type" : "integer"
          }
        }, {
          "allowEmptyValue" : false,
          "description" : "Allows the client to resume retrieving results from where the previous page left off",
          "in" : "query",
          "name" : "continuationToken",
          "schema" : {
            "type" : "string"
          }
        }, {
          "allowEmptyValue" : false,
          "description" : "Identifies the sort criteria to be used for the records in the response message. Use with the orderBy parameter.",
          "in" : "query",
          "name" : "sort",
          "schema" : {
            "type" : "string"
          }
        }, {
          "allowEmptyValue" : false,
          "description" : "The form of ordering for response to the sorted request i.e. ascending (asc) or descending (desc).",
          "in" : "query",
          "name" : "orderBy",
          "schema" : {
            "enum" : [ "acs", "desc" ],
            "type" : "string"
          }
        }, {
          "allowEmptyValue" : false,
          "description" : "The filtering rules to be applied when identifying the records to be supplied in the response message.",
          "in" : "query",
          "name" : "filter",
          "schema" : {
            "type" : "string"
          }
        }, {
          "allowEmptyValue" : false,
          "description" : "To identify the range of fields that should be supplied in the response message.",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Categories.Type"
                }
              }
            },
            "description" : "...tbd...",
            "headers" : {
              "X-Total-Count" : {
                "description" : "The total number of resources that are available",
                "schema" : {
                  "type" : "integer"
                }
              }
            }
          },
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/imsx_StatusInfo.Type"
                }
              }
            },
            "description" : "StatusInfo Error Report"
          }
        },
        "summary" : "The REST read request message for the getCategories() API call.",
        "tags" : [ "CategoriesManagement" ]
      }
    },
    "/categories/{sourcedId}" : {
      "delete" : {
        "description" : "...not supplied...",
        "operationId" : "deleteCategory",
        "parameters" : [ {
          "description" : "...tbd...",
          "in" : "path",
          "name" : "sourcedId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "content" : { },
            "description" : "...tbd..."
          },
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/imsx_StatusInfo.Type"
                }
              }
            },
            "description" : "StatusInfo Error Report"
          }
        },
        "summary" : "The REST delete request message for the deleteCategory() API call.",
        "tags" : [ "CategoriesManagement" ]
      },
      "get" : {
        "description" : "...not supplied...",
        "operationId" : "getCategory",
        "parameters" : [ {
          "description" : "...tbd...",
          "in" : "path",
          "name" : "sourcedId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SingleCategory.Type"
                }
              }
            },
            "description" : "...tbd...",
            "headers" : {
              "X-Total-Count" : {
                "description" : "The total number of resources that are available",
                "schema" : {
                  "type" : "integer"
                }
              }
            }
          },
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/imsx_StatusInfo.Type"
                }
              }
            },
            "description" : "StatusInfo Error Report"
          }
        },
        "summary" : "The REST read request message for the getCategory() API call.",
        "tags" : [ "CategoriesManagement" ]
      },
      "put" : {
        "description" : "...not supplied...",
        "operationId" : "putCategory",
        "parameters" : [ {
          "description" : "...tbd...",
          "in" : "path",
          "name" : "sourcedId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/SingleCategory.Type"
              }
            }
          },
          "description" : "...tbd...",
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : { },
            "description" : "...tbd..."
          },
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/imsx_StatusInfo.Type"
                }
              }
            },
            "description" : "StatusInfo Error Report"
          }
        },
        "summary" : "The REST create request message for the putCategory() API call.",
        "tags" : [ "CategoriesManagement" ],
        "x-codegen-request-body-name" : "category"
      }
    },
    "/classes" : {
      "get" : {
        "description" : "To read, get, a collection of classes i.e. all classes.",
        "operationId" : "getClasses",
        "parameters" : [ {
          "allowEmptyValue" : false,
          "description" : "To define the download segmentation value i.e. the maximum number of records to be contained in the response.",
          "in" : "query",
          "name" : "limit",
          "schema" : {
            "default" : 100,
            "format" : "int32",
            "minimum" : 1,
            "type" : "integer"
          }
        }, {
          "allowEmptyValue" : false,
          "description" : "The number of the first record to be supplied in the segmented response message.",
          "in" : "query",
          "name" : "offset",
          "schema" : {
            "default" : 0,
            "format" : "int32",
            "minimum" : 0,
            "type" : "integer"
          }
        }, {
          "allowEmptyValue" : false,
          "description" : "Allows the client to resume retrieving results from where the previous page left off",
          "in" : "query",
          "name" : "continuationToken",
          "schema" : {
            "type" : "string"
          }
        }, {
          "allowEmptyValue" : false,
          "description" : "Identifies the sort criteria to be used for the records in the response message. Use with the orderBy parameter.",
          "in" : "query",
          "name" : "sort",
          "schema" : {
            "type" : "string"
          }
        }, {
          "allowEmptyValue" : false,
          "description" : "The form of ordering for response to the sorted request i.e. ascending (asc) or descending (desc).",
          "in" : "query",
          "name" : "orderBy",
          "schema" : {
            "enum" : [ "acs", "desc" ],
            "type" : "string"
          }
        }, {
          "allowEmptyValue" : false,
          "description" : "The filtering rules to be applied when identifying the records to be supplied in the response message.",
          "in" : "query",
          "name" : "filter",
          "schema" : {
            "type" : "string"
          }
        }, {
          "allowEmptyValue" : false,
          "description" : "To identify the range of fields that should be supplied in the response message.",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Classes.Type"
                }
              }
            },
            "description" : "...tbd...",
            "headers" : {
              "X-Total-Count" : {
                "description" : "The total number of resources that are available",
                "schema" : {
                  "type" : "integer"
                }
              }
            }
          },
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/imsx_StatusInfo.Type"
                }
              }
            },
            "description" : "StatusInfo Error Report"
          }
        },
        "summary" : "The REST read request message for the getClasses() API call.",
        "tags" : [ "ClassesManagement" ]
      }
    },
    "/classes/{classSourcedId}/lineItems/{lineItemSourcedId}/results" : {
      "get" : {
        "description" : "...not supplied...",
        "operationId" : "getResultsForLineItemForClass",
        "parameters" : [ {
          "description" : "...tbd...",
          "in" : "path",
          "name" : "classSourcedId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "description" : "...tbd...",
          "in" : "path",
          "name" : "lineItemSourcedId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "allowEmptyValue" : false,
          "description" : "To define the download segmentation value i.e. the maximum number of records to be contained in the response.",
          "in" : "query",
          "name" : "limit",
          "schema" : {
            "default" : 100,
            "format" : "int32",
            "minimum" : 1,
            "type" : "integer"
          }
        }, {
          "allowEmptyValue" : false,
          "description" : "The number of the first record to be supplied in the segmented response message.",
          "in" : "query",
          "name" : "offset",
          "schema" : {
            "default" : 0,
            "format" : "int32",
            "minimum" : 0,
            "type" : "integer"
          }
        }, {
          "allowEmptyValue" : false,
          "description" : "Allows the client to resume retrieving results from where the previous page left off",
          "in" : "query",
          "name" : "continuationToken",
          "schema" : {
            "type" : "string"
          }
        }, {
          "allowEmptyValue" : false,
          "description" : "Identifies the sort criteria to be used for the records in the response message. Use with the orderBy parameter.",
          "in" : "query",
          "name" : "sort",
          "schema" : {
            "type" : "string"
          }
        }, {
          "allowEmptyValue" : false,
          "description" : "The form of ordering for response to the sorted request i.e. ascending (asc) or descending (desc).",
          "in" : "query",
          "name" : "orderBy",
          "schema" : {
            "enum" : [ "acs", "desc" ],
            "type" : "string"
          }
        }, {
          "allowEmptyValue" : false,
          "description" : "The filtering rules to be applied when identifying the records to be supplied in the response message.",
          "in" : "query",
          "name" : "filter",
          "schema" : {
            "type" : "string"
          }
        }, {
          "allowEmptyValue" : false,
          "description" : "To identify the range of fields that should be supplied in the response message.",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Results.Type"
                }
              }
            },
            "description" : "...tbd...",
            "headers" : {
              "X-Total-Count" : {
                "description" : "The total number of resources that are available",
                "schema" : {
                  "type" : "integer"
                }
              }
            }
          },
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/imsx_StatusInfo.Type"
                }
              }
            },
            "description" : "StatusInfo Error Report"
          }
        },
        "summary" : "The REST read request message for the getResultsForLineItemForClass() API call.",
        "tags" : [ "ResultsManagement" ]
      }
    },
    "/classes/{classSourcedId}/lineItems" : {
      "get" : {
        "description" : "...not supplied...",
        "operationId" : "getLineItemsForClass",
        "parameters" : [ {
          "description" : "...tbd...",
          "in" : "path",
          "name" : "classSourcedId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "allowEmptyValue" : false,
          "description" : "To define the download segmentation value i.e. the maximum number of records to be contained in the response.",
          "in" : "query",
          "name" : "limit",
          "schema" : {
            "default" : 100,
            "format" : "int32",
            "minimum" : 1,
            "type" : "integer"
          }
        }, {
          "allowEmptyValue" : false,
          "description" : "The number of the first record to be supplied in the segmented response message.",
          "in" : "query",
          "name" : "offset",
          "schema" : {
            "default" : 0,
            "format" : "int32",
            "minimum" : 0,
            "type" : "integer"
          }
        }, {
          "allowEmptyValue" : false,
          "description" : "Allows the client to resume retrieving results from where the previous page left off",
          "in" : "query",
          "name" : "continuationToken",
          "schema" : {
            "type" : "string"
          }
        }, {
          "allowEmptyValue" : false,
          "description" : "Identifies the sort criteria to be used for the records in the response message. Use with the orderBy parameter.",
          "in" : "query",
          "name" : "sort",
          "schema" : {
            "type" : "string"
          }
        }, {
          "allowEmptyValue" : false,
          "description" : "The form of ordering for response to the sorted request i.e. ascending (asc) or descending (desc).",
          "in" : "query",
          "name" : "orderBy",
          "schema" : {
            "enum" : [ "acs", "desc" ],
            "type" : "string"
          }
        }, {
          "allowEmptyValue" : false,
          "description" : "The filtering rules to be applied when identifying the records to be supplied in the response message.",
          "in" : "query",
          "name" : "filter",
          "schema" : {
            "type" : "string"
          }
        }, {
          "allowEmptyValue" : false,
          "description" : "To identify the range of fields that should be supplied in the response message.",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/LineItems.Type"
                }
              }
            },
            "description" : "...tbd...",
            "headers" : {
              "X-Total-Count" : {
                "description" : "The total number of resources that are available",
                "schema" : {
                  "type" : "integer"
                }
              }
            }
          },
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/imsx_StatusInfo.Type"
                }
              }
            },
            "description" : "StatusInfo Error Report"
          }
        },
        "summary" : "The REST read request message for the getLineItemsForClass() API call.",
        "tags" : [ "LineItemsManagement" ]
      }
    },
    "/classes/{classSourcedId}/resources" : {
      "get" : {
        "description" : "...not supplied...",
        "operationId" : "getResourcesForClass",
        "parameters" : [ {
          "description" : "...tbd...",
          "in" : "path",
          "name" : "classSourcedId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "allowEmptyValue" : false,
          "description" : "To define the download segmentation value i.e. the maximum number of records to be contained in the response.",
          "in" : "query",
          "name" : "limit",
          "schema" : {
            "default" : 100,
            "format" : "int32",
            "minimum" : 1,
            "type" : "integer"
          }
        }, {
          "allowEmptyValue" : false,
          "description" : "The number of the first record to be supplied in the segmented response message.",
          "in" : "query",
          "name" : "offset",
          "schema" : {
            "default" : 0,
            "format" : "int32",
            "minimum" : 0,
            "type" : "integer"
          }
        }, {
          "allowEmptyValue" : false,
          "description" : "Allows the client to resume retrieving results from where the previous page left off",
          "in" : "query",
          "name" : "continuationToken",
          "schema" : {
            "type" : "string"
          }
        }, {
          "allowEmptyValue" : false,
          "description" : "Identifies the sort criteria to be used for the records in the response message. Use with the orderBy parameter.",
          "in" : "query",
          "name" : "sort",
          "schema" : {
            "type" : "string"
          }
        }, {
          "allowEmptyValue" : false,
          "description" : "The form of ordering for response to the sorted request i.e. ascending (asc) or descending (desc).",
          "in" : "query",
          "name" : "orderBy",
          "schema" : {
            "enum" : [ "acs", "desc" ],
            "type" : "string"
          }
        }, {
          "allowEmptyValue" : false,
          "description" : "The filtering rules to be applied when identifying the records to be supplied in the response message.",
          "in" : "query",
          "name" : "filter",
          "schema" : {
            "type" : "string"
          }
        }, {
          "allowEmptyValue" : false,
          "description" : "To identify the range of fields that should be supplied in the response message.",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Resources.Type"
                }
              }
            },
            "description" : "...tbd...",
            "headers" : {
              "X-Total-Count" : {
                "description" : "The total number of resources that are available",
                "schema" : {
                  "type" : "integer"
                }
              }
            }
          },
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/imsx_StatusInfo.Type"
                }
              }
            },
            "description" : "StatusInfo Error Report"
          }
        },
        "summary" : "The REST read request message for the getResourcesForClass() API call.",
        "tags" : [ "ResourcesManagement" ]
      }
    },
    "/classes/{classSourcedId}/results" : {
      "get" : {
        "description" : "...not supplied...",
        "operationId" : "getResultsForClass",
        "parameters" : [ {
          "description" : "...tbd...",
          "in" : "path",
          "name" : "classSourcedId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "allowEmptyValue" : false,
          "description" : "To define the download segmentation value i.e. the maximum number of records to be contained in the response.",
          "in" : "query",
          "name" : "limit",
          "schema" : {
            "default" : 100,
            "format" : "int32",
            "minimum" : 1,
            "type" : "integer"
          }
        }, {
          "allowEmptyValue" : false,
          "description" : "The number of the first record to be supplied in the segmented response message.",
          "in" : "query",
          "name" : "offset",
          "schema" : {
            "default" : 0,
            "format" : "int32",
            "minimum" : 0,
            "type" : "integer"
          }
        }, {
          "allowEmptyValue" : false,
          "description" : "Allows the client to resume retrieving results from where the previous page left off",
          "in" : "query",
          "name" : "continuationToken",
          "schema" : {
            "type" : "string"
          }
        }, {
          "allowEmptyValue" : false,
          "description" : "Identifies the sort criteria to be used for the records in the response message. Use with the orderBy parameter.",
          "in" : "query",
          "name" : "sort",
          "schema" : {
            "type" : "string"
          }
        }, {
          "allowEmptyValue" : false,
          "description" : "The form of ordering for response to the sorted request i.e. ascending (asc) or descending (desc).",
          "in" : "query",
          "name" : "orderBy",
          "schema" : {
            "enum" : [ "acs", "desc" ],
            "type" : "string"
          }
        }, {
          "allowEmptyValue" : false,
          "description" : "The filtering rules to be applied when identifying the records to be supplied in the response message.",
          "in" : "query",
          "name" : "filter",
          "schema" : {
            "type" : "string"
          }
        }, {
          "allowEmptyValue" : false,
          "description" : "To identify the range of fields that should be supplied in the response message.",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Results.Type"
                }
              }
            },
            "description" : "...tbd...",
            "headers" : {
              "X-Total-Count" : {
                "description" : "The total number of resources that are available",
                "schema" : {
                  "type" : "integer"
                }
              }
            }
          },
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/imsx_StatusInfo.Type"
                }
              }
            },
            "description" : "StatusInfo Error Report"
          }
        },
        "summary" : "The REST read request message for the getResultsForClass() API call.",
        "tags" : [ "ResultsManagement" ]
      }
    },
    "/classes/{classSourcedId}/students" : {
      "get" : {
        "description" : "...not supplied...",
        "operationId" : "getStudentsForClass",
        "parameters" : [ {
          "description" : "...tbd...",
          "in" : "path",
          "name" : "classSourcedId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "allowEmptyValue" : false,
          "description" : "To define the download segmentation value i.e. the maximum number of records to be contained in the response.",
          "in" : "query",
          "name" : "limit",
          "schema" : {
            "default" : 100,
            "format" : "int32",
            "minimum" : 1,
            "type" : "integer"
          }
        }, {
          "allowEmptyValue" : false,
          "description" : "The number of the first record to be supplied in the segmented response message.",
          "in" : "query",
          "name" : "offset",
          "schema" : {
            "default" : 0,
            "format" : "int32",
            "minimum" : 0,
            "type" : "integer"
          }
        }, {
          "allowEmptyValue" : false,
          "description" : "Allows the client to resume retrieving results from where the previous page left off",
          "in" : "query",
          "name" : "continuationToken",
          "schema" : {
            "type" : "string"
          }
        }, {
          "allowEmptyValue" : false,
          "description" : "Identifies the sort criteria to be used for the records in the response message. Use with the orderBy parameter.",
          "in" : "query",
          "name" : "sort",
          "schema" : {
            "type" : "string"
          }
        }, {
          "allowEmptyValue" : false,
          "description" : "The form of ordering for response to the sorted request i.e. ascending (asc) or descending (desc).",
          "in" : "query",
          "name" : "orderBy",
          "schema" : {
            "enum" : [ "acs", "desc" ],
            "type" : "string"
          }
        }, {
          "allowEmptyValue" : false,
          "description" : "The filtering rules to be applied when identifying the records to be supplied in the response message.",
          "in" : "query",
          "name" : "filter",
          "schema" : {
            "type" : "string"
          }
        }, {
          "allowEmptyValue" : false,
          "description" : "To identify the range of fields that should be supplied in the response message.",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Users.Type"
                }
              }
            },
            "description" : "...tbd...",
            "headers" : {
              "X-Total-Count" : {
                "description" : "The total number of resources that are available",
                "schema" : {
                  "type" : "integer"
                }
              }
            }
          },
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/imsx_StatusInfo.Type"
                }
              }
            },
            "description" : "StatusInfo Error Report"
          }
        },
        "summary" : "The REST read request message for the getStudentsForClass() API call.",
        "tags" : [ "StudentsManagement" ]
      }
    },
    "/classes/{classSourcedId}/students/{studentSourcedId}/results" : {
      "get" : {
        "description" : "...not supplied...",
        "operationId" : "getResultsForStudentForClass",
        "parameters" : [ {
          "description" : "...tbd...",
          "in" : "path",
          "name" : "classSourcedId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "description" : "...tbd...",
          "in" : "path",
          "name" : "studentSourcedId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "allowEmptyValue" : false,
          "description" : "To define the download segmentation value i.e. the maximum number of records to be contained in the response.",
          "in" : "query",
          "name" : "limit",
          "schema" : {
            "default" : 100,
            "format" : "int32",
            "minimum" : 1,
            "type" : "integer"
          }
        }, {
          "allowEmptyValue" : false,
          "description" : "The number of the first record to be supplied in the segmented response message.",
          "in" : "query",
          "name" : "offset",
          "schema" : {
            "default" : 0,
            "format" : "int32",
            "minimum" : 0,
            "type" : "integer"
          }
        }, {
          "allowEmptyValue" : false,
          "description" : "Allows the client to resume retrieving results from where the previous page left off",
          "in" : "query",
          "name" : "continuationToken",
          "schema" : {
            "type" : "string"
          }
        }, {
          "allowEmptyValue" : false,
          "description" : "Identifies the sort criteria to be used for the records in the response message. Use with the orderBy parameter.",
          "in" : "query",
          "name" : "sort",
          "schema" : {
            "type" : "string"
          }
        }, {
          "allowEmptyValue" : false,
          "description" : "The form of ordering for response to the sorted request i.e. ascending (asc) or descending (desc).",
          "in" : "query",
          "name" : "orderBy",
          "schema" : {
            "enum" : [ "acs", "desc" ],
            "type" : "string"
          }
        }, {
          "allowEmptyValue" : false,
          "description" : "The filtering rules to be applied when identifying the records to be supplied in the response message.",
          "in" : "query",
          "name" : "filter",
          "schema" : {
            "type" : "string"
          }
        }, {
          "allowEmptyValue" : false,
          "description" : "To identify the range of fields that should be supplied in the response message.",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Results.Type"
                }
              }
            },
            "description" : "...tbd...",
            "headers" : {
              "X-Total-Count" : {
                "description" : "The total number of resources that are available",
                "schema" : {
                  "type" : "integer"
                }
              }
            }
          },
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/imsx_StatusInfo.Type"
                }
              }
            },
            "description" : "StatusInfo Error Report"
          }
        },
        "summary" : "The REST read request message for the getResultsForStudentForClass() API call.",
        "tags" : [ "ResultsManagement" ]
      }
    },
    "/classes/{classSourcedId}/teachers" : {
      "get" : {
        "description" : "...not supplied...",
        "operationId" : "getTeachersForClass",
        "parameters" : [ {
          "description" : "...tbd...",
          "in" : "path",
          "name" : "classSourcedId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "allowEmptyValue" : false,
          "description" : "To define the download segmentation value i.e. the maximum number of records to be contained in the response.",
          "in" : "query",
          "name" : "limit",
          "schema" : {
            "default" : 100,
            "format" : "int32",
            "minimum" : 1,
            "type" : "integer"
          }
        }, {
          "allowEmptyValue" : false,
          "description" : "The number of the first record to be supplied in the segmented response message.",
          "in" : "query",
          "name" : "offset",
          "schema" : {
            "default" : 0,
            "format" : "int32",
            "minimum" : 0,
            "type" : "integer"
          }
        }, {
          "allowEmptyValue" : false,
          "description" : "Allows the client to resume retrieving results from where the previous page left off",
          "in" : "query",
          "name" : "continuationToken",
          "schema" : {
            "type" : "string"
          }
        }, {
          "allowEmptyValue" : false,
          "description" : "Identifies the sort criteria to be used for the records in the response message. Use with the orderBy parameter.",
          "in" : "query",
          "name" : "sort",
          "schema" : {
            "type" : "string"
          }
        }, {
          "allowEmptyValue" : false,
          "description" : "The form of ordering for response to the sorted request i.e. ascending (asc) or descending (desc).",
          "in" : "query",
          "name" : "orderBy",
          "schema" : {
            "enum" : [ "acs", "desc" ],
            "type" : "string"
          }
        }, {
          "allowEmptyValue" : false,
          "description" : "The filtering rules to be applied when identifying the records to be supplied in the response message.",
          "in" : "query",
          "name" : "filter",
          "schema" : {
            "type" : "string"
          }
        }, {
          "allowEmptyValue" : false,
          "description" : "To identify the range of fields that should be supplied in the response message.",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Users.Type"
                }
              }
            },
            "description" : "...tbd...",
            "headers" : {
              "X-Total-Count" : {
                "description" : "The total number of resources that are available",
                "schema" : {
                  "type" : "integer"
                }
              }
            }
          },
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/imsx_StatusInfo.Type"
                }
              }
            },
            "description" : "StatusInfo Error Report"
          }
        },
        "summary" : "The REST read request message for the getTeachersForClass() API call.",
        "tags" : [ "TeachersManagement" ]
      }
    },
    "/classes/{sourcedId}" : {
      "get" : {
        "description" : "To read, get, a specific class.",
        "operationId" : "getClass",
        "parameters" : [ {
          "description" : "The unique identifier for this class.",
          "in" : "path",
          "name" : "sourcedId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SingleClass.Type"
                }
              }
            },
            "description" : "...tbd...",
            "headers" : {
              "X-Total-Count" : {
                "description" : "The total number of resources that are available",
                "schema" : {
                  "type" : "integer"
                }
              }
            }
          },
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/imsx_StatusInfo.Type"
                }
              }
            },
            "description" : "StatusInfo Error Report"
          }
        },
        "summary" : "The REST read request message for the getClass() API call.",
        "tags" : [ "ClassesManagement" ]
      }
    },
    "/courses" : {
      "get" : {
        "description" : "To read, get, a collection of courses i.e. all courses.",
        "operationId" : "getCourses",
        "parameters" : [ {
          "allowEmptyValue" : false,
          "description" : "To define the download segmentation value i.e. the maximum number of records to be contained in the response.",
          "in" : "query",
          "name" : "limit",
          "schema" : {
            "default" : 100,
            "format" : "int32",
            "minimum" : 1,
            "type" : "integer"
          }
        }, {
          "allowEmptyValue" : false,
          "description" : "The number of the first record to be supplied in the segmented response message.",
          "in" : "query",
          "name" : "offset",
          "schema" : {
            "default" : 0,
            "format" : "int32",
            "minimum" : 0,
            "type" : "integer"
          }
        }, {
          "allowEmptyValue" : false,
          "description" : "Allows the client to resume retrieving results from where the previous page left off",
          "in" : "query",
          "name" : "continuationToken",
          "schema" : {
            "type" : "string"
          }
        }, {
          "allowEmptyValue" : false,
          "description" : "Identifies the sort criteria to be used for the records in the response message. Use with the orderBy parameter.",
          "in" : "query",
          "name" : "sort",
          "schema" : {
            "type" : "string"
          }
        }, {
          "allowEmptyValue" : false,
          "description" : "The form of ordering for response to the sorted request i.e. ascending (asc) or descending (desc).",
          "in" : "query",
          "name" : "orderBy",
          "schema" : {
            "enum" : [ "acs", "desc" ],
            "type" : "string"
          }
        }, {
          "allowEmptyValue" : false,
          "description" : "The filtering rules to be applied when identifying the records to be supplied in the response message.",
          "in" : "query",
          "name" : "filter",
          "schema" : {
            "type" : "string"
          }
        }, {
          "allowEmptyValue" : false,
          "description" : "To identify the range of fields that should be supplied in the response message.",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Courses.Type"
                }
              }
            },
            "description" : "...tbd...",
            "headers" : {
              "X-Total-Count" : {
                "description" : "The total number of resources that are available",
                "schema" : {
                  "type" : "integer"
                }
              }
            }
          },
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/imsx_StatusInfo.Type"
                }
              }
            },
            "description" : "StatusInfo Error Report"
          }
        },
        "summary" : "The REST read request message for the getCourses() API call.",
        "tags" : [ "CoursesManagement" ]
      }
    },
    "/courses/{courseSourcedId}/classes" : {
      "get" : {
        "description" : "...not supplied...",
        "operationId" : "getClassesForCourse",
        "parameters" : [ {
          "description" : "...tbd...",
          "in" : "path",
          "name" : "courseSourcedId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "allowEmptyValue" : false,
          "description" : "To define the download segmentation value i.e. the maximum number of records to be contained in the response.",
          "in" : "query",
          "name" : "limit",
          "schema" : {
            "default" : 100,
            "format" : "int32",
            "minimum" : 1,
            "type" : "integer"
          }
        }, {
          "allowEmptyValue" : false,
          "description" : "The number of the first record to be supplied in the segmented response message.",
          "in" : "query",
          "name" : "offset",
          "schema" : {
            "default" : 0,
            "format" : "int32",
            "minimum" : 0,
            "type" : "integer"
          }
        }, {
          "allowEmptyValue" : false,
          "description" : "Allows the client to resume retrieving results from where the previous page left off",
          "in" : "query",
          "name" : "continuationToken",
          "schema" : {
            "type" : "string"
          }
        }, {
          "allowEmptyValue" : false,
          "description" : "Identifies the sort criteria to be used for the records in the response message. Use with the orderBy parameter.",
          "in" : "query",
          "name" : "sort",
          "schema" : {
            "type" : "string"
          }
        }, {
          "allowEmptyValue" : false,
          "description" : "The form of ordering for response to the sorted request i.e. ascending (asc) or descending (desc).",
          "in" : "query",
          "name" : "orderBy",
          "schema" : {
            "enum" : [ "acs", "desc" ],
            "type" : "string"
          }
        }, {
          "allowEmptyValue" : false,
          "description" : "The filtering rules to be applied when identifying the records to be supplied in the response message.",
          "in" : "query",
          "name" : "filter",
          "schema" : {
            "type" : "string"
          }
        }, {
          "allowEmptyValue" : false,
          "description" : "To identify the range of fields that should be supplied in the response message.",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Classes.Type"
                }
              }
            },
            "description" : "...tbd...",
            "headers" : {
              "X-Total-Count" : {
                "description" : "The total number of resources that are available",
                "schema" : {
                  "type" : "integer"
                }
              }
            }
          },
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/imsx_StatusInfo.Type"
                }
              }
            },
            "description" : "StatusInfo Error Report"
          }
        },
        "summary" : "The REST read request message for the getClassesForCourse() API call.",
        "tags" : [ "ClassesManagement" ]
      }
    },
    "/courses/{courseSourcedId}/resources" : {
      "get" : {
        "description" : "...not supplied...",
        "operationId" : "getResourcesForCourse",
        "parameters" : [ {
          "description" : "...tbd...",
          "in" : "path",
          "name" : "courseSourcedId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "allowEmptyValue" : false,
          "description" : "To define the download segmentation value i.e. the maximum number of records to be contained in the response.",
          "in" : "query",
          "name" : "limit",
          "schema" : {
            "default" : 100,
            "format" : "int32",
            "minimum" : 1,
            "type" : "integer"
          }
        }, {
          "allowEmptyValue" : false,
          "description" : "The number of the first record to be supplied in the segmented response message.",
          "in" : "query",
          "name" : "offset",
          "schema" : {
            "default" : 0,
            "format" : "int32",
            "minimum" : 0,
            "type" : "integer"
          }
        }, {
          "allowEmptyValue" : false,
          "description" : "Allows the client to resume retrieving results from where the previous page left off",
          "in" : "query",
          "name" : "continuationToken",
          "schema" : {
            "type" : "string"
          }
        }, {
          "allowEmptyValue" : false,
          "description" : "Identifies the sort criteria to be used for the records in the response message. Use with the orderBy parameter.",
          "in" : "query",
          "name" : "sort",
          "schema" : {
            "type" : "string"
          }
        }, {
          "allowEmptyValue" : false,
          "description" : "The form of ordering for response to the sorted request i.e. ascending (asc) or descending (desc).",
          "in" : "query",
          "name" : "orderBy",
          "schema" : {
            "enum" : [ "acs", "desc" ],
            "type" : "string"
          }
        }, {
          "allowEmptyValue" : false,
          "description" : "The filtering rules to be applied when identifying the records to be supplied in the response message.",
          "in" : "query",
          "name" : "filter",
          "schema" : {
            "type" : "string"
          }
        }, {
          "allowEmptyValue" : false,
          "description" : "To identify the range of fields that should be supplied in the response message.",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Resources.Type"
                }
              }
            },
            "description" : "...tbd...",
            "headers" : {
              "X-Total-Count" : {
                "description" : "The total number of resources that are available",
                "schema" : {
                  "type" : "integer"
                }
              }
            }
          },
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/imsx_StatusInfo.Type"
                }
              }
            },
            "description" : "StatusInfo Error Report"
          }
        },
        "summary" : "The REST read request message for the getResourcesForCourse() API call.",
        "tags" : [ "ResourcesManagement" ]
      }
    },
    "/courses/{sourcedId}" : {
      "get" : {
        "description" : "To read, get, a specific course.",
        "operationId" : "getCourse",
        "parameters" : [ {
          "description" : "The unique identifier for this course.",
          "in" : "path",
          "name" : "sourcedId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SingleCourse.Type"
                }
              }
            },
            "description" : "...tbd...",
            "headers" : {
              "X-Total-Count" : {
                "description" : "The total number of resources that are available",
                "schema" : {
                  "type" : "integer"
                }
              }
            }
          },
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/imsx_StatusInfo.Type"
                }
              }
            },
            "description" : "StatusInfo Error Report"
          }
        },
        "summary" : "The REST read request message for the getCourse() API call.",
        "tags" : [ "CoursesManagement" ]
      }
    },
    "/demographics" : {
      "get" : {
        "description" : "...not supplied...",
        "operationId" : "getDemographics",
        "parameters" : [ {
          "allowEmptyValue" : false,
          "description" : "To define the download segmentation value i.e. the maximum number of records to be contained in the response.",
          "in" : "query",
          "name" : "limit",
          "schema" : {
            "default" : 100,
            "format" : "int32",
            "minimum" : 1,
            "type" : "integer"
          }
        }, {
          "allowEmptyValue" : false,
          "description" : "The number of the first record to be supplied in the segmented response message.",
          "in" : "query",
          "name" : "offset",
          "schema" : {
            "default" : 0,
            "format" : "int32",
            "minimum" : 0,
            "type" : "integer"
          }
        }, {
          "allowEmptyValue" : false,
          "description" : "Allows the client to resume retrieving results from where the previous page left off",
          "in" : "query",
          "name" : "continuationToken",
          "schema" : {
            "type" : "string"
          }
        }, {
          "allowEmptyValue" : false,
          "description" : "Identifies the sort criteria to be used for the records in the response message. Use with the orderBy parameter.",
          "in" : "query",
          "name" : "sort",
          "schema" : {
            "type" : "string"
          }
        }, {
          "allowEmptyValue" : false,
          "description" : "The form of ordering for response to the sorted request i.e. ascending (asc) or descending (desc).",
          "in" : "query",
          "name" : "orderBy",
          "schema" : {
            "enum" : [ "acs", "desc" ],
            "type" : "string"
          }
        }, {
          "allowEmptyValue" : false,
          "description" : "The filtering rules to be applied when identifying the records to be supplied in the response message.",
          "in" : "query",
          "name" : "filter",
          "schema" : {
            "type" : "string"
          }
        }, {
          "allowEmptyValue" : false,
          "description" : "To identify the range of fields that should be supplied in the response message.",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Demographics.Type"
                }
              }
            },
            "description" : "...tbd...",
            "headers" : {
              "X-Total-Count" : {
                "description" : "The total number of resources that are available",
                "schema" : {
                  "type" : "integer"
                }
              }
            }
          },
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/imsx_StatusInfo.Type"
                }
              }
            },
            "description" : "StatusInfo Error Report"
          }
        },
        "summary" : "The REST read request message for the getDemographics() API call.",
        "tags" : [ "DemographicsManagement" ]
      }
    },
    "/demographics/{sourcedId}" : {
      "get" : {
        "description" : "...not supplied...",
        "operationId" : "getDemographic",
        "parameters" : [ {
          "description" : "...tbd...",
          "in" : "path",
          "name" : "sourcedId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SingleDemographics.Type"
                }
              }
            },
            "description" : "...tbd...",
            "headers" : {
              "X-Total-Count" : {
                "description" : "The total number of resources that are available",
                "schema" : {
                  "type" : "integer"
                }
              }
            }
          },
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/imsx_StatusInfo.Type"
                }
              }
            },
            "description" : "StatusInfo Error Report"
          }
        },
        "summary" : "The REST read request message for the getDemographic() API call.",
        "tags" : [ "DemographicsManagement" ]
      }
    },
    "/enrollments" : {
      "get" : {
        "description" : "...not supplied...",
        "operationId" : "getEnrollments",
        "parameters" : [ {
          "allowEmptyValue" : false,
          "description" : "To define the download segmentation value i.e. the maximum number of records to be contained in the response.",
          "in" : "query",
          "name" : "limit",
          "schema" : {
            "default" : 100,
            "format" : "int32",
            "minimum" : 1,
            "type" : "integer"
          }
        }, {
          "allowEmptyValue" : false,
          "description" : "The number of the first record to be supplied in the segmented response message.",
          "in" : "query",
          "name" : "offset",
          "schema" : {
            "default" : 0,
            "format" : "int32",
            "minimum" : 0,
            "type" : "integer"
          }
        }, {
          "allowEmptyValue" : false,
          "description" : "Allows the client to resume retrieving results from where the previous page left off",
          "in" : "query",
          "name" : "continuationToken",
          "schema" : {
            "type" : "string"
          }
        }, {
          "allowEmptyValue" : false,
          "description" : "Identifies the sort criteria to be used for the records in the response message. Use with the orderBy parameter.",
          "in" : "query",
          "name" : "sort",
          "schema" : {
            "type" : "string"
          }
        }, {
          "allowEmptyValue" : false,
          "description" : "The form of ordering for response to the sorted request i.e. ascending (asc) or descending (desc).",
          "in" : "query",
          "name" : "orderBy",
          "schema" : {
            "enum" : [ "acs", "desc" ],
            "type" : "string"
          }
        }, {
          "allowEmptyValue" : false,
          "description" : "The filtering rules to be applied when identifying the records to be supplied in the response message.",
          "in" : "query",
          "name" : "filter",
          "schema" : {
            "type" : "string"
          }
        }, {
          "allowEmptyValue" : false,
          "description" : "To identify the range of fields that should be supplied in the response message.",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Enrollments.Type"
                }
              }
            },
            "description" : "...tbd...",
            "headers" : {
              "X-Total-Count" : {
                "description" : "The total number of resources that are available",
                "schema" : {
                  "type" : "integer"
                }
              }
            }
          },
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/imsx_StatusInfo.Type"
                }
              }
            },
            "description" : "StatusInfo Error Report"
          }
        },
        "summary" : "The REST read request message for the getEnrollments() API call.",
        "tags" : [ "EnrollmentsManagement" ]
      }
    },
    "/enrollments/{sourcedId}" : {
      "get" : {
        "description" : "...not supplied...",
        "operationId" : "getEnrollment",
        "parameters" : [ {
          "description" : "...tbd...",
          "in" : "path",
          "name" : "sourcedId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SingleEnrollment.Type"
                }
              }
            },
            "description" : "...tbd...",
            "headers" : {
              "X-Total-Count" : {
                "description" : "The total number of resources that are available",
                "schema" : {
                  "type" : "integer"
                }
              }
            }
          },
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/imsx_StatusInfo.Type"
                }
              }
            },
            "description" : "StatusInfo Error Report"
          }
        },
        "summary" : "The REST read request message for the getEnrollment() API call.",
        "tags" : [ "EnrollmentsManagement" ]
      }
    },
    "/gradingPeriods" : {
      "get" : {
        "description" : "...not supplied...",
        "operationId" : "getGradingPeriods",
        "parameters" : [ {
          "allowEmptyValue" : false,
          "description" : "To define the download segmentation value i.e. the maximum number of records to be contained in the response.",
          "in" : "query",
          "name" : "limit",
          "schema" : {
            "default" : 100,
            "format" : "int32",
            "minimum" : 1,
            "type" : "integer"
          }
        }, {
          "allowEmptyValue" : false,
          "description" : "The number of the first record to be supplied in the segmented response message.",
          "in" : "query",
          "name" : "offset",
          "schema" : {
            "default" : 0,
            "format" : "int32",
            "minimum" : 0,
            "type" : "integer"
          }
        }, {
          "allowEmptyValue" : false,
          "description" : "Allows the client to resume retrieving results from where the previous page left off",
          "in" : "query",
          "name" : "continuationToken",
          "schema" : {
            "type" : "string"
          }
        }, {
          "allowEmptyValue" : false,
          "description" : "Identifies the sort criteria to be used for the records in the response message. Use with the orderBy parameter.",
          "in" : "query",
          "name" : "sort",
          "schema" : {
            "type" : "string"
          }
        }, {
          "allowEmptyValue" : false,
          "description" : "The form of ordering for response to the sorted request i.e. ascending (asc) or descending (desc).",
          "in" : "query",
          "name" : "orderBy",
          "schema" : {
            "enum" : [ "acs", "desc" ],
            "type" : "string"
          }
        }, {
          "allowEmptyValue" : false,
          "description" : "The filtering rules to be applied when identifying the records to be supplied in the response message.",
          "in" : "query",
          "name" : "filter",
          "schema" : {
            "type" : "string"
          }
        }, {
          "allowEmptyValue" : false,
          "description" : "To identify the range of fields that should be supplied in the response message.",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MultipleAcademicSessions.Type"
                }
              }
            },
            "description" : "...tbd...",
            "headers" : {
              "X-Total-Count" : {
                "description" : "The total number of resources that are available",
                "schema" : {
                  "type" : "integer"
                }
              }
            }
          },
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/imsx_StatusInfo.Type"
                }
              }
            },
            "description" : "StatusInfo Error Report"
          }
        },
        "summary" : "The REST read request message for the getGradingPeriods() API call.",
        "tags" : [ "GradingPeriodsManagement" ]
      }
    },
    "/gradingPeriods/{sourcedId}" : {
      "get" : {
        "description" : "...not supplied...",
        "operationId" : "getGradingPeriod",
        "parameters" : [ {
          "description" : "...tbd...",
          "in" : "path",
          "name" : "sourcedId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SingleAcademicSession.Type"
                }
              }
            },
            "description" : "...tbd...",
            "headers" : {
              "X-Total-Count" : {
                "description" : "The total number of resources that are available",
                "schema" : {
                  "type" : "integer"
                }
              }
            }
          },
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/imsx_StatusInfo.Type"
                }
              }
            },
            "description" : "StatusInfo Error Report"
          }
        },
        "summary" : "The REST read request message for the getGradingPeriod() API call.",
        "tags" : [ "GradingPeriodsManagement" ]
      }
    },
    "/lineItems" : {
      "get" : {
        "description" : "...not supplied...",
        "operationId" : "getLineItems",
        "parameters" : [ {
          "allowEmptyValue" : false,
          "description" : "To define the download segmentation value i.e. the maximum number of records to be contained in the response.",
          "in" : "query",
          "name" : "limit",
          "schema" : {
            "default" : 100,
            "format" : "int32",
            "minimum" : 1,
            "type" : "integer"
          }
        }, {
          "allowEmptyValue" : false,
          "description" : "The number of the first record to be supplied in the segmented response message.",
          "in" : "query",
          "name" : "offset",
          "schema" : {
            "default" : 0,
            "format" : "int32",
            "minimum" : 0,
            "type" : "integer"
          }
        }, {
          "allowEmptyValue" : false,
          "description" : "Allows the client to resume retrieving results from where the previous page left off",
          "in" : "query",
          "name" : "continuationToken",
          "schema" : {
            "type" : "string"
          }
        }, {
          "allowEmptyValue" : false,
          "description" : "Identifies the sort criteria to be used for the records in the response message. Use with the orderBy parameter.",
          "in" : "query",
          "name" : "sort",
          "schema" : {
            "type" : "string"
          }
        }, {
          "allowEmptyValue" : false,
          "description" : "The form of ordering for response to the sorted request i.e. ascending (asc) or descending (desc).",
          "in" : "query",
          "name" : "orderBy",
          "schema" : {
            "enum" : [ "acs", "desc" ],
            "type" : "string"
          }
        }, {
          "allowEmptyValue" : false,
          "description" : "The filtering rules to be applied when identifying the records to be supplied in the response message.",
          "in" : "query",
          "name" : "filter",
          "schema" : {
            "type" : "string"
          }
        }, {
          "allowEmptyValue" : false,
          "description" : "To identify the range of fields that should be supplied in the response message.",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/LineItems.Type"
                }
              }
            },
            "description" : "...tbd...",
            "headers" : {
              "X-Total-Count" : {
                "description" : "The total number of resources that are available",
                "schema" : {
                  "type" : "integer"
                }
              }
            }
          },
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/imsx_StatusInfo.Type"
                }
              }
            },
            "description" : "StatusInfo Error Report"
          }
        },
        "summary" : "The REST read request message for the getLineItems() API call.",
        "tags" : [ "LineItemsManagement" ]
      }
    },
    "/lineItems/{sourcedId}" : {
      "delete" : {
        "description" : "...not supplied...",
        "operationId" : "deleteLineItem",
        "parameters" : [ {
          "description" : "...tbd...",
          "in" : "path",
          "name" : "sourcedId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "content" : { },
            "description" : "...tbd..."
          },
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/imsx_StatusInfo.Type"
                }
              }
            },
            "description" : "StatusInfo Error Report"
          }
        },
        "summary" : "The REST delete request message for the deleteLineItem() API call.",
        "tags" : [ "LineItemsManagement" ]
      },
      "get" : {
        "description" : "...not supplied...",
        "operationId" : "getLineItem",
        "parameters" : [ {
          "description" : "...tbd...",
          "in" : "path",
          "name" : "sourcedId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SingleLineItem.Type"
                }
              }
            },
            "description" : "...tbd...",
            "headers" : {
              "X-Total-Count" : {
                "description" : "The total number of resources that are available",
                "schema" : {
                  "type" : "integer"
                }
              }
            }
          },
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/imsx_StatusInfo.Type"
                }
              }
            },
            "description" : "StatusInfo Error Report"
          }
        },
        "summary" : "The REST read request message for the getLineItem() API call.",
        "tags" : [ "LineItemsManagement" ]
      },
      "put" : {
        "description" : "...not supplied...",
        "operationId" : "putLineItem",
        "parameters" : [ {
          "description" : "...tbd...",
          "in" : "path",
          "name" : "sourcedId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/SingleLineItem.Type"
              }
            }
          },
          "description" : "...tbd...",
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : { },
            "description" : "...tbd..."
          },
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/imsx_StatusInfo.Type"
                }
              }
            },
            "description" : "StatusInfo Error Report"
          }
        },
        "summary" : "The REST create request message for the putLineItem() API call.",
        "tags" : [ "LineItemsManagement" ],
        "x-codegen-request-body-name" : "lineItem"
      }
    },
    "/orgs" : {
      "get" : {
        "description" : "...not supplied...",
        "operationId" : "getOrgs",
        "parameters" : [ {
          "allowEmptyValue" : false,
          "description" : "To define the download segmentation value i.e. the maximum number of records to be contained in the response.",
          "in" : "query",
          "name" : "limit",
          "schema" : {
            "default" : 100,
            "format" : "int32",
            "minimum" : 1,
            "type" : "integer"
          }
        }, {
          "allowEmptyValue" : false,
          "description" : "The number of the first record to be supplied in the segmented response message.",
          "in" : "query",
          "name" : "offset",
          "schema" : {
            "default" : 0,
            "format" : "int32",
            "minimum" : 0,
            "type" : "integer"
          }
        }, {
          "allowEmptyValue" : false,
          "description" : "Allows the client to resume retrieving results from where the previous page left off",
          "in" : "query",
          "name" : "continuationToken",
          "schema" : {
            "type" : "string"
          }
        }, {
          "allowEmptyValue" : false,
          "description" : "Identifies the sort criteria to be used for the records in the response message. Use with the orderBy parameter.",
          "in" : "query",
          "name" : "sort",
          "schema" : {
            "type" : "string"
          }
        }, {
          "allowEmptyValue" : false,
          "description" : "The form of ordering for response to the sorted request i.e. ascending (asc) or descending (desc).",
          "in" : "query",
          "name" : "orderBy",
          "schema" : {
            "enum" : [ "acs", "desc" ],
            "type" : "string"
          }
        }, {
          "allowEmptyValue" : false,
          "description" : "The filtering rules to be applied when identifying the records to be supplied in the response message.",
          "in" : "query",
          "name" : "filter",
          "schema" : {
            "type" : "string"
          }
        }, {
          "allowEmptyValue" : false,
          "description" : "To identify the range of fields that should be supplied in the response message.",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Orgs.Type"
                }
              }
            },
            "description" : "...tbd...",
            "headers" : {
              "X-Total-Count" : {
                "description" : "The total number of resources that are available",
                "schema" : {
                  "type" : "integer"
                }
              }
            }
          },
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/imsx_StatusInfo.Type"
                }
              }
            },
            "description" : "StatusInfo Error Report"
          }
        },
        "summary" : "The REST read request message for the getOrgs() API call.",
        "tags" : [ "OrgsManagement" ]
      }
    },
    "/orgs/{sourcedId}" : {
      "get" : {
        "description" : "...not supplied...",
        "operationId" : "getOrg",
        "parameters" : [ {
          "description" : "...tbd...",
          "in" : "path",
          "name" : "sourcedId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SingleOrg.Type"
                }
              }
            },
            "description" : "...tbd...",
            "headers" : {
              "X-Total-Count" : {
                "description" : "The total number of resources that are available",
                "schema" : {
                  "type" : "integer"
                }
              }
            }
          },
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/imsx_StatusInfo.Type"
                }
              }
            },
            "description" : "StatusInfo Error Report"
          }
        },
        "summary" : "The REST read request message for the getOrg() API call.",
        "tags" : [ "OrgsManagement" ]
      }
    },
    "/resources" : {
      "get" : {
        "description" : "...not supplied...",
        "operationId" : "getResources",
        "parameters" : [ {
          "allowEmptyValue" : false,
          "description" : "To define the download segmentation value i.e. the maximum number of records to be contained in the response.",
          "in" : "query",
          "name" : "limit",
          "schema" : {
            "default" : 100,
            "format" : "int32",
            "minimum" : 1,
            "type" : "integer"
          }
        }, {
          "allowEmptyValue" : false,
          "description" : "The number of the first record to be supplied in the segmented response message.",
          "in" : "query",
          "name" : "offset",
          "schema" : {
            "default" : 0,
            "format" : "int32",
            "minimum" : 0,
            "type" : "integer"
          }
        }, {
          "allowEmptyValue" : false,
          "description" : "Allows the client to resume retrieving results from where the previous page left off",
          "in" : "query",
          "name" : "continuationToken",
          "schema" : {
            "type" : "string"
          }
        }, {
          "allowEmptyValue" : false,
          "description" : "Identifies the sort criteria to be used for the records in the response message. Use with the orderBy parameter.",
          "in" : "query",
          "name" : "sort",
          "schema" : {
            "type" : "string"
          }
        }, {
          "allowEmptyValue" : false,
          "description" : "The form of ordering for response to the sorted request i.e. ascending (asc) or descending (desc).",
          "in" : "query",
          "name" : "orderBy",
          "schema" : {
            "enum" : [ "acs", "desc" ],
            "type" : "string"
          }
        }, {
          "allowEmptyValue" : false,
          "description" : "The filtering rules to be applied when identifying the records to be supplied in the response message.",
          "in" : "query",
          "name" : "filter",
          "schema" : {
            "type" : "string"
          }
        }, {
          "allowEmptyValue" : false,
          "description" : "To identify the range of fields that should be supplied in the response message.",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Resources.Type"
                }
              }
            },
            "description" : "...tbd...",
            "headers" : {
              "X-Total-Count" : {
                "description" : "The total number of resources that are available",
                "schema" : {
                  "type" : "integer"
                }
              }
            }
          },
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/imsx_StatusInfo.Type"
                }
              }
            },
            "description" : "StatusInfo Error Report"
          }
        },
        "summary" : "The REST read request message for the getResources() API call.",
        "tags" : [ "ResourcesManagement" ]
      }
    },
    "/resources/{sourcedId}" : {
      "get" : {
        "description" : "...not supplied...",
        "operationId" : "getResource",
        "parameters" : [ {
          "description" : "...tbd...",
          "in" : "path",
          "name" : "sourcedId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SingleResource.Type"
                }
              }
            },
            "description" : "...tbd...",
            "headers" : {
              "X-Total-Count" : {
                "description" : "The total number of resources that are available",
                "schema" : {
                  "type" : "integer"
                }
              }
            }
          },
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/imsx_StatusInfo.Type"
                }
              }
            },
            "description" : "StatusInfo Error Report"
          }
        },
        "summary" : "The REST read request message for the getResource() API call.",
        "tags" : [ "ResourcesManagement" ]
      }
    },
    "/results" : {
      "get" : {
        "description" : "...not supplied...",
        "operationId" : "getResults",
        "parameters" : [ {
          "allowEmptyValue" : false,
          "description" : "To define the download segmentation value i.e. the maximum number of records to be contained in the response.",
          "in" : "query",
          "name" : "limit",
          "schema" : {
            "default" : 100,
            "format" : "int32",
            "minimum" : 1,
            "type" : "integer"
          }
        }, {
          "allowEmptyValue" : false,
          "description" : "The number of the first record to be supplied in the segmented response message.",
          "in" : "query",
          "name" : "offset",
          "schema" : {
            "default" : 0,
            "format" : "int32",
            "minimum" : 0,
            "type" : "integer"
          }
        }, {
          "allowEmptyValue" : false,
          "description" : "Allows the client to resume retrieving results from where the previous page left off",
          "in" : "query",
          "name" : "continuationToken",
          "schema" : {
            "type" : "string"
          }
        }, {
          "allowEmptyValue" : false,
          "description" : "Identifies the sort criteria to be used for the records in the response message. Use with the orderBy parameter.",
          "in" : "query",
          "name" : "sort",
          "schema" : {
            "type" : "string"
          }
        }, {
          "allowEmptyValue" : false,
          "description" : "The form of ordering for response to the sorted request i.e. ascending (asc) or descending (desc).",
          "in" : "query",
          "name" : "orderBy",
          "schema" : {
            "enum" : [ "acs", "desc" ],
            "type" : "string"
          }
        }, {
          "allowEmptyValue" : false,
          "description" : "The filtering rules to be applied when identifying the records to be supplied in the response message.",
          "in" : "query",
          "name" : "filter",
          "schema" : {
            "type" : "string"
          }
        }, {
          "allowEmptyValue" : false,
          "description" : "To identify the range of fields that should be supplied in the response message.",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Results.Type"
                }
              }
            },
            "description" : "...tbd...",
            "headers" : {
              "X-Total-Count" : {
                "description" : "The total number of resources that are available",
                "schema" : {
                  "type" : "integer"
                }
              }
            }
          },
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/imsx_StatusInfo.Type"
                }
              }
            },
            "description" : "StatusInfo Error Report"
          }
        },
        "summary" : "The REST read request message for the getResults() API call.",
        "tags" : [ "ResultsManagement" ]
      }
    },
    "/results/{sourcedId}" : {
      "delete" : {
        "description" : "...not supplied...",
        "operationId" : "deleteResult",
        "parameters" : [ {
          "description" : "...tbd...",
          "in" : "path",
          "name" : "sourcedId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "content" : { },
            "description" : "...tbd..."
          },
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/imsx_StatusInfo.Type"
                }
              }
            },
            "description" : "StatusInfo Error Report"
          }
        },
        "summary" : "The REST delete request message for the deleteResult() API call.",
        "tags" : [ "ResultsManagement" ]
      },
      "get" : {
        "description" : "...not supplied...",
        "operationId" : "getResult",
        "parameters" : [ {
          "description" : "...tbd...",
          "in" : "path",
          "name" : "sourcedId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SingleResult.Type"
                }
              }
            },
            "description" : "...tbd...",
            "headers" : {
              "X-Total-Count" : {
                "description" : "The total number of resources that are available",
                "schema" : {
                  "type" : "integer"
                }
              }
            }
          },
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/imsx_StatusInfo.Type"
                }
              }
            },
            "description" : "StatusInfo Error Report"
          }
        },
        "summary" : "The REST read request message for the getResult() API call.",
        "tags" : [ "ResultsManagement" ]
      },
      "put" : {
        "description" : "...not supplied...",
        "operationId" : "putResult",
        "parameters" : [ {
          "description" : "...tbd...",
          "in" : "path",
          "name" : "sourcedId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/SingleResult.Type"
              }
            }
          },
          "description" : "...tbd...",
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : { },
            "description" : "...tbd..."
          },
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/imsx_StatusInfo.Type"
                }
              }
            },
            "description" : "StatusInfo Error Report"
          }
        },
        "summary" : "The REST create request message for the putResult() API call.",
        "tags" : [ "ResultsManagement" ],
        "x-codegen-request-body-name" : "result"
      }
    },
    "/schools" : {
      "get" : {
        "description" : "...not supplied...",
        "operationId" : "getSchools",
        "parameters" : [ {
          "allowEmptyValue" : false,
          "description" : "To define the download segmentation value i.e. the maximum number of records to be contained in the response.",
          "in" : "query",
          "name" : "limit",
          "schema" : {
            "default" : 100,
            "format" : "int32",
            "minimum" : 1,
            "type" : "integer"
          }
        }, {
          "allowEmptyValue" : false,
          "description" : "The number of the first record to be supplied in the segmented response message.",
          "in" : "query",
          "name" : "offset",
          "schema" : {
            "default" : 0,
            "format" : "int32",
            "minimum" : 0,
            "type" : "integer"
          }
        }, {
          "allowEmptyValue" : false,
          "description" : "Allows the client to resume retrieving results from where the previous page left off",
          "in" : "query",
          "name" : "continuationToken",
          "schema" : {
            "type" : "string"
          }
        }, {
          "allowEmptyValue" : false,
          "description" : "Identifies the sort criteria to be used for the records in the response message. Use with the orderBy parameter.",
          "in" : "query",
          "name" : "sort",
          "schema" : {
            "type" : "string"
          }
        }, {
          "allowEmptyValue" : false,
          "description" : "The form of ordering for response to the sorted request i.e. ascending (asc) or descending (desc).",
          "in" : "query",
          "name" : "orderBy",
          "schema" : {
            "enum" : [ "acs", "desc" ],
            "type" : "string"
          }
        }, {
          "allowEmptyValue" : false,
          "description" : "The filtering rules to be applied when identifying the records to be supplied in the response message.",
          "in" : "query",
          "name" : "filter",
          "schema" : {
            "type" : "string"
          }
        }, {
          "allowEmptyValue" : false,
          "description" : "To identify the range of fields that should be supplied in the response message.",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Orgs.Type"
                }
              }
            },
            "description" : "...tbd...",
            "headers" : {
              "X-Total-Count" : {
                "description" : "The total number of resources that are available",
                "schema" : {
                  "type" : "integer"
                }
              }
            }
          },
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/imsx_StatusInfo.Type"
                }
              }
            },
            "description" : "StatusInfo Error Report"
          }
        },
        "summary" : "The REST read request message for the getSchools() API call.",
        "tags" : [ "SchoolsManagement" ]
      }
    },
    "/schools/{schoolSourcedId}/classes" : {
      "get" : {
        "description" : "...not supplied...",
        "operationId" : "getClassesForSchool",
        "parameters" : [ {
          "description" : "...tbd...",
          "in" : "path",
          "name" : "schoolSourcedId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "allowEmptyValue" : false,
          "description" : "To define the download segmentation value i.e. the maximum number of records to be contained in the response.",
          "in" : "query",
          "name" : "limit",
          "schema" : {
            "default" : 100,
            "format" : "int32",
            "minimum" : 1,
            "type" : "integer"
          }
        }, {
          "allowEmptyValue" : false,
          "description" : "The number of the first record to be supplied in the segmented response message.",
          "in" : "query",
          "name" : "offset",
          "schema" : {
            "default" : 0,
            "format" : "int32",
            "minimum" : 0,
            "type" : "integer"
          }
        }, {
          "allowEmptyValue" : false,
          "description" : "Allows the client to resume retrieving results from where the previous page left off",
          "in" : "query",
          "name" : "continuationToken",
          "schema" : {
            "type" : "string"
          }
        }, {
          "allowEmptyValue" : false,
          "description" : "Identifies the sort criteria to be used for the records in the response message. Use with the orderBy parameter.",
          "in" : "query",
          "name" : "sort",
          "schema" : {
            "type" : "string"
          }
        }, {
          "allowEmptyValue" : false,
          "description" : "The form of ordering for response to the sorted request i.e. ascending (asc) or descending (desc).",
          "in" : "query",
          "name" : "orderBy",
          "schema" : {
            "enum" : [ "acs", "desc" ],
            "type" : "string"
          }
        }, {
          "allowEmptyValue" : false,
          "description" : "The filtering rules to be applied when identifying the records to be supplied in the response message.",
          "in" : "query",
          "name" : "filter",
          "schema" : {
            "type" : "string"
          }
        }, {
          "allowEmptyValue" : false,
          "description" : "To identify the range of fields that should be supplied in the response message.",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Classes.Type"
                }
              }
            },
            "description" : "...tbd...",
            "headers" : {
              "X-Total-Count" : {
                "description" : "The total number of resources that are available",
                "schema" : {
                  "type" : "integer"
                }
              }
            }
          },
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/imsx_StatusInfo.Type"
                }
              }
            },
            "description" : "StatusInfo Error Report"
          }
        },
        "summary" : "The REST read request message for the getClassesForSchool() API call.",
        "tags" : [ "ClassesManagement" ]
      }
    },
    "/schools/{schoolSourcedId}/classes/{classSourcedId}/enrollments" : {
      "get" : {
        "description" : "...not supplied...",
        "operationId" : "getEnrollmentsForClassInSchool",
        "parameters" : [ {
          "description" : "...tbd...",
          "in" : "path",
          "name" : "schoolSourcedId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "description" : "...tbd...",
          "in" : "path",
          "name" : "classSourcedId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "allowEmptyValue" : false,
          "description" : "To define the download segmentation value i.e. the maximum number of records to be contained in the response.",
          "in" : "query",
          "name" : "limit",
          "schema" : {
            "default" : 100,
            "format" : "int32",
            "minimum" : 1,
            "type" : "integer"
          }
        }, {
          "allowEmptyValue" : false,
          "description" : "The number of the first record to be supplied in the segmented response message.",
          "in" : "query",
          "name" : "offset",
          "schema" : {
            "default" : 0,
            "format" : "int32",
            "minimum" : 0,
            "type" : "integer"
          }
        }, {
          "allowEmptyValue" : false,
          "description" : "Allows the client to resume retrieving results from where the previous page left off",
          "in" : "query",
          "name" : "continuationToken",
          "schema" : {
            "type" : "string"
          }
        }, {
          "allowEmptyValue" : false,
          "description" : "Identifies the sort criteria to be used for the records in the response message. Use with the orderBy parameter.",
          "in" : "query",
          "name" : "sort",
          "schema" : {
            "type" : "string"
          }
        }, {
          "allowEmptyValue" : false,
          "description" : "The form of ordering for response to the sorted request i.e. ascending (asc) or descending (desc).",
          "in" : "query",
          "name" : "orderBy",
          "schema" : {
            "enum" : [ "acs", "desc" ],
            "type" : "string"
          }
        }, {
          "allowEmptyValue" : false,
          "description" : "The filtering rules to be applied when identifying the records to be supplied in the response message.",
          "in" : "query",
          "name" : "filter",
          "schema" : {
            "type" : "string"
          }
        }, {
          "allowEmptyValue" : false,
          "description" : "To identify the range of fields that should be supplied in the response message.",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Enrollments.Type"
                }
              }
            },
            "description" : "...tbd...",
            "headers" : {
              "X-Total-Count" : {
                "description" : "The total number of resources that are available",
                "schema" : {
                  "type" : "integer"
                }
              }
            }
          },
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/imsx_StatusInfo.Type"
                }
              }
            },
            "description" : "StatusInfo Error Report"
          }
        },
        "summary" : "The REST read request message for the getEnrollmentsForClassInSchool() API call.",
        "tags" : [ "EnrollmentsManagement" ]
      }
    },
    "/schools/{schoolSourcedId}/classes/{classSourcedId}/students" : {
      "get" : {
        "description" : "...not supplied...",
        "operationId" : "getStudentsForClassInSchool",
        "parameters" : [ {
          "description" : "...tbd...",
          "in" : "path",
          "name" : "schoolSourcedId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "description" : "...tbd...",
          "in" : "path",
          "name" : "classSourcedId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "allowEmptyValue" : false,
          "description" : "To define the download segmentation value i.e. the maximum number of records to be contained in the response.",
          "in" : "query",
          "name" : "limit",
          "schema" : {
            "default" : 100,
            "format" : "int32",
            "minimum" : 1,
            "type" : "integer"
          }
        }, {
          "allowEmptyValue" : false,
          "description" : "The number of the first record to be supplied in the segmented response message.",
          "in" : "query",
          "name" : "offset",
          "schema" : {
            "default" : 0,
            "format" : "int32",
            "minimum" : 0,
            "type" : "integer"
          }
        }, {
          "allowEmptyValue" : false,
          "description" : "Allows the client to resume retrieving results from where the previous page left off",
          "in" : "query",
          "name" : "continuationToken",
          "schema" : {
            "type" : "string"
          }
        }, {
          "allowEmptyValue" : false,
          "description" : "Identifies the sort criteria to be used for the records in the response message. Use with the orderBy parameter.",
          "in" : "query",
          "name" : "sort",
          "schema" : {
            "type" : "string"
          }
        }, {
          "allowEmptyValue" : false,
          "description" : "The form of ordering for response to the sorted request i.e. ascending (asc) or descending (desc).",
          "in" : "query",
          "name" : "orderBy",
          "schema" : {
            "enum" : [ "acs", "desc" ],
            "type" : "string"
          }
        }, {
          "allowEmptyValue" : false,
          "description" : "The filtering rules to be applied when identifying the records to be supplied in the response message.",
          "in" : "query",
          "name" : "filter",
          "schema" : {
            "type" : "string"
          }
        }, {
          "allowEmptyValue" : false,
          "description" : "To identify the range of fields that should be supplied in the response message.",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Users.Type"
                }
              }
            },
            "description" : "...tbd...",
            "headers" : {
              "X-Total-Count" : {
                "description" : "The total number of resources that are available",
                "schema" : {
                  "type" : "integer"
                }
              }
            }
          },
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/imsx_StatusInfo.Type"
                }
              }
            },
            "description" : "StatusInfo Error Report"
          }
        },
        "summary" : "The REST read request message for the getStudentsForClassInSchool() API call.",
        "tags" : [ "StudentsManagement" ]
      }
    },
    "/schools/{schoolSourcedId}/classes/{classSourcedId}/teachers" : {
      "get" : {
        "description" : "...not supplied...",
        "operationId" : "getTeachersForClassInSchool",
        "parameters" : [ {
          "description" : "...tbd...",
          "in" : "path",
          "name" : "schoolSourcedId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "description" : "...tbd...",
          "in" : "path",
          "name" : "classSourcedId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "allowEmptyValue" : false,
          "description" : "To define the download segmentation value i.e. the maximum number of records to be contained in the response.",
          "in" : "query",
          "name" : "limit",
          "schema" : {
            "default" : 100,
            "format" : "int32",
            "minimum" : 1,
            "type" : "integer"
          }
        }, {
          "allowEmptyValue" : false,
          "description" : "The number of the first record to be supplied in the segmented response message.",
          "in" : "query",
          "name" : "offset",
          "schema" : {
            "default" : 0,
            "format" : "int32",
            "minimum" : 0,
            "type" : "integer"
          }
        }, {
          "allowEmptyValue" : false,
          "description" : "Allows the client to resume retrieving results from where the previous page left off",
          "in" : "query",
          "name" : "continuationToken",
          "schema" : {
            "type" : "string"
          }
        }, {
          "allowEmptyValue" : false,
          "description" : "Identifies the sort criteria to be used for the records in the response message. Use with the orderBy parameter.",
          "in" : "query",
          "name" : "sort",
          "schema" : {
            "type" : "string"
          }
        }, {
          "allowEmptyValue" : false,
          "description" : "The form of ordering for response to the sorted request i.e. ascending (asc) or descending (desc).",
          "in" : "query",
          "name" : "orderBy",
          "schema" : {
            "enum" : [ "acs", "desc" ],
            "type" : "string"
          }
        }, {
          "allowEmptyValue" : false,
          "description" : "The filtering rules to be applied when identifying the records to be supplied in the response message.",
          "in" : "query",
          "name" : "filter",
          "schema" : {
            "type" : "string"
          }
        }, {
          "allowEmptyValue" : false,
          "description" : "To identify the range of fields that should be supplied in the response message.",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Users.Type"
                }
              }
            },
            "description" : "...tbd...",
            "headers" : {
              "X-Total-Count" : {
                "description" : "The total number of resources that are available",
                "schema" : {
                  "type" : "integer"
                }
              }
            }
          },
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/imsx_StatusInfo.Type"
                }
              }
            },
            "description" : "StatusInfo Error Report"
          }
        },
        "summary" : "The REST read request message for the getTeachersForClassInSchool() API call.",
        "tags" : [ "TeachersManagement" ]
      }
    },
    "/schools/{schoolSourcedId}/courses" : {
      "get" : {
        "description" : "...not supplied...",
        "operationId" : "getCoursesForSchool",
        "parameters" : [ {
          "description" : "...tbd...",
          "in" : "path",
          "name" : "schoolSourcedId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "allowEmptyValue" : false,
          "description" : "To define the download segmentation value i.e. the maximum number of records to be contained in the response.",
          "in" : "query",
          "name" : "limit",
          "schema" : {
            "default" : 100,
            "format" : "int32",
            "minimum" : 1,
            "type" : "integer"
          }
        }, {
          "allowEmptyValue" : false,
          "description" : "The number of the first record to be supplied in the segmented response message.",
          "in" : "query",
          "name" : "offset",
          "schema" : {
            "default" : 0,
            "format" : "int32",
            "minimum" : 0,
            "type" : "integer"
          }
        }, {
          "allowEmptyValue" : false,
          "description" : "Allows the client to resume retrieving results from where the previous page left off",
          "in" : "query",
          "name" : "continuationToken",
          "schema" : {
            "type" : "string"
          }
        }, {
          "allowEmptyValue" : false,
          "description" : "Identifies the sort criteria to be used for the records in the response message. Use with the orderBy parameter.",
          "in" : "query",
          "name" : "sort",
          "schema" : {
            "type" : "string"
          }
        }, {
          "allowEmptyValue" : false,
          "description" : "The form of ordering for response to the sorted request i.e. ascending (asc) or descending (desc).",
          "in" : "query",
          "name" : "orderBy",
          "schema" : {
            "enum" : [ "acs", "desc" ],
            "type" : "string"
          }
        }, {
          "allowEmptyValue" : false,
          "description" : "The filtering rules to be applied when identifying the records to be supplied in the response message.",
          "in" : "query",
          "name" : "filter",
          "schema" : {
            "type" : "string"
          }
        }, {
          "allowEmptyValue" : false,
          "description" : "To identify the range of fields that should be supplied in the response message.",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Courses.Type"
                }
              }
            },
            "description" : "...tbd...",
            "headers" : {
              "X-Total-Count" : {
                "description" : "The total number of resources that are available",
                "schema" : {
                  "type" : "integer"
                }
              }
            }
          },
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/imsx_StatusInfo.Type"
                }
              }
            },
            "description" : "StatusInfo Error Report"
          }
        },
        "summary" : "The REST read request message for the getCoursesForSchool() API call.",
        "tags" : [ "CoursesManagement" ]
      }
    },
    "/schools/{schoolSourcedId}/enrollments" : {
      "get" : {
        "description" : "...not supplied...",
        "operationId" : "getEnrollmentsForSchool",
        "parameters" : [ {
          "description" : "...tbd...",
          "in" : "path",
          "name" : "schoolSourcedId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "allowEmptyValue" : false,
          "description" : "To define the download segmentation value i.e. the maximum number of records to be contained in the response.",
          "in" : "query",
          "name" : "limit",
          "schema" : {
            "default" : 100,
            "format" : "int32",
            "minimum" : 1,
            "type" : "integer"
          }
        }, {
          "allowEmptyValue" : false,
          "description" : "The number of the first record to be supplied in the segmented response message.",
          "in" : "query",
          "name" : "offset",
          "schema" : {
            "default" : 0,
            "format" : "int32",
            "minimum" : 0,
            "type" : "integer"
          }
        }, {
          "allowEmptyValue" : false,
          "description" : "Allows the client to resume retrieving results from where the previous page left off",
          "in" : "query",
          "name" : "continuationToken",
          "schema" : {
            "type" : "string"
          }
        }, {
          "allowEmptyValue" : false,
          "description" : "Identifies the sort criteria to be used for the records in the response message. Use with the orderBy parameter.",
          "in" : "query",
          "name" : "sort",
          "schema" : {
            "type" : "string"
          }
        }, {
          "allowEmptyValue" : false,
          "description" : "The form of ordering for response to the sorted request i.e. ascending (asc) or descending (desc).",
          "in" : "query",
          "name" : "orderBy",
          "schema" : {
            "enum" : [ "acs", "desc" ],
            "type" : "string"
          }
        }, {
          "allowEmptyValue" : false,
          "description" : "The filtering rules to be applied when identifying the records to be supplied in the response message.",
          "in" : "query",
          "name" : "filter",
          "schema" : {
            "type" : "string"
          }
        }, {
          "allowEmptyValue" : false,
          "description" : "To identify the range of fields that should be supplied in the response message.",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Enrollments.Type"
                }
              }
            },
            "description" : "...tbd...",
            "headers" : {
              "X-Total-Count" : {
                "description" : "The total number of resources that are available",
                "schema" : {
                  "type" : "integer"
                }
              }
            }
          },
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/imsx_StatusInfo.Type"
                }
              }
            },
            "description" : "StatusInfo Error Report"
          }
        },
        "summary" : "The REST read request message for the getEnrollmentsForSchool() API call.",
        "tags" : [ "EnrollmentsManagement" ]
      }
    },
    "/schools/{schoolSourcedId}/students" : {
      "get" : {
        "description" : "...not supplied...",
        "operationId" : "getStudentsForSchool",
        "parameters" : [ {
          "description" : "...tbd...",
          "in" : "path",
          "name" : "schoolSourcedId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "allowEmptyValue" : false,
          "description" : "To define the download segmentation value i.e. the maximum number of records to be contained in the response.",
          "in" : "query",
          "name" : "limit",
          "schema" : {
            "default" : 100,
            "format" : "int32",
            "minimum" : 1,
            "type" : "integer"
          }
        }, {
          "allowEmptyValue" : false,
          "description" : "The number of the first record to be supplied in the segmented response message.",
          "in" : "query",
          "name" : "offset",
          "schema" : {
            "default" : 0,
            "format" : "int32",
            "minimum" : 0,
            "type" : "integer"
          }
        }, {
          "allowEmptyValue" : false,
          "description" : "Allows the client to resume retrieving results from where the previous page left off",
          "in" : "query",
          "name" : "continuationToken",
          "schema" : {
            "type" : "string"
          }
        }, {
          "allowEmptyValue" : false,
          "description" : "Identifies the sort criteria to be used for the records in the response message. Use with the orderBy parameter.",
          "in" : "query",
          "name" : "sort",
          "schema" : {
            "type" : "string"
          }
        }, {
          "allowEmptyValue" : false,
          "description" : "The form of ordering for response to the sorted request i.e. ascending (asc) or descending (desc).",
          "in" : "query",
          "name" : "orderBy",
          "schema" : {
            "enum" : [ "acs", "desc" ],
            "type" : "string"
          }
        }, {
          "allowEmptyValue" : false,
          "description" : "The filtering rules to be applied when identifying the records to be supplied in the response message.",
          "in" : "query",
          "name" : "filter",
          "schema" : {
            "type" : "string"
          }
        }, {
          "allowEmptyValue" : false,
          "description" : "To identify the range of fields that should be supplied in the response message.",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Users.Type"
                }
              }
            },
            "description" : "...tbd...",
            "headers" : {
              "X-Total-Count" : {
                "description" : "The total number of resources that are available",
                "schema" : {
                  "type" : "integer"
                }
              }
            }
          },
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/imsx_StatusInfo.Type"
                }
              }
            },
            "description" : "StatusInfo Error Report"
          }
        },
        "summary" : "The REST read request message for the getStudentsForSchool() API call.",
        "tags" : [ "StudentsManagement" ]
      }
    },
    "/schools/{schoolSourcedId}/teachers" : {
      "get" : {
        "description" : "...not supplied...",
        "operationId" : "getTeachersForSchool",
        "parameters" : [ {
          "description" : "...tbd...",
          "in" : "path",
          "name" : "schoolSourcedId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "allowEmptyValue" : false,
          "description" : "To define the download segmentation value i.e. the maximum number of records to be contained in the response.",
          "in" : "query",
          "name" : "limit",
          "schema" : {
            "default" : 100,
            "format" : "int32",
            "minimum" : 1,
            "type" : "integer"
          }
        }, {
          "allowEmptyValue" : false,
          "description" : "The number of the first record to be supplied in the segmented response message.",
          "in" : "query",
          "name" : "offset",
          "schema" : {
            "default" : 0,
            "format" : "int32",
            "minimum" : 0,
            "type" : "integer"
          }
        }, {
          "allowEmptyValue" : false,
          "description" : "Allows the client to resume retrieving results from where the previous page left off",
          "in" : "query",
          "name" : "continuationToken",
          "schema" : {
            "type" : "string"
          }
        }, {
          "allowEmptyValue" : false,
          "description" : "Identifies the sort criteria to be used for the records in the response message. Use with the orderBy parameter.",
          "in" : "query",
          "name" : "sort",
          "schema" : {
            "type" : "string"
          }
        }, {
          "allowEmptyValue" : false,
          "description" : "The form of ordering for response to the sorted request i.e. ascending (asc) or descending (desc).",
          "in" : "query",
          "name" : "orderBy",
          "schema" : {
            "enum" : [ "acs", "desc" ],
            "type" : "string"
          }
        }, {
          "allowEmptyValue" : false,
          "description" : "The filtering rules to be applied when identifying the records to be supplied in the response message.",
          "in" : "query",
          "name" : "filter",
          "schema" : {
            "type" : "string"
          }
        }, {
          "allowEmptyValue" : false,
          "description" : "To identify the range of fields that should be supplied in the response message.",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Users.Type"
                }
              }
            },
            "description" : "...tbd...",
            "headers" : {
              "X-Total-Count" : {
                "description" : "The total number of resources that are available",
                "schema" : {
                  "type" : "integer"
                }
              }
            }
          },
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/imsx_StatusInfo.Type"
                }
              }
            },
            "description" : "StatusInfo Error Report"
          }
        },
        "summary" : "The REST read request message for the getTeachersForSchool() API call.",
        "tags" : [ "TeachersManagement" ]
      }
    },
    "/schools/{schoolSourcedId}/terms" : {
      "get" : {
        "description" : "...not supplied...",
        "operationId" : "getTermsForSchool",
        "parameters" : [ {
          "description" : "...tbd...",
          "in" : "path",
          "name" : "schoolSourcedId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "allowEmptyValue" : false,
          "description" : "To define the download segmentation value i.e. the maximum number of records to be contained in the response.",
          "in" : "query",
          "name" : "limit",
          "schema" : {
            "default" : 100,
            "format" : "int32",
            "minimum" : 1,
            "type" : "integer"
          }
        }, {
          "allowEmptyValue" : false,
          "description" : "The number of the first record to be supplied in the segmented response message.",
          "in" : "query",
          "name" : "offset",
          "schema" : {
            "default" : 0,
            "format" : "int32",
            "minimum" : 0,
            "type" : "integer"
          }
        }, {
          "allowEmptyValue" : false,
          "description" : "Allows the client to resume retrieving results from where the previous page left off",
          "in" : "query",
          "name" : "continuationToken",
          "schema" : {
            "type" : "string"
          }
        }, {
          "allowEmptyValue" : false,
          "description" : "Identifies the sort criteria to be used for the records in the response message. Use with the orderBy parameter.",
          "in" : "query",
          "name" : "sort",
          "schema" : {
            "type" : "string"
          }
        }, {
          "allowEmptyValue" : false,
          "description" : "The form of ordering for response to the sorted request i.e. ascending (asc) or descending (desc).",
          "in" : "query",
          "name" : "orderBy",
          "schema" : {
            "enum" : [ "acs", "desc" ],
            "type" : "string"
          }
        }, {
          "allowEmptyValue" : false,
          "description" : "The filtering rules to be applied when identifying the records to be supplied in the response message.",
          "in" : "query",
          "name" : "filter",
          "schema" : {
            "type" : "string"
          }
        }, {
          "allowEmptyValue" : false,
          "description" : "To identify the range of fields that should be supplied in the response message.",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MultipleAcademicSessions.Type"
                }
              }
            },
            "description" : "...tbd...",
            "headers" : {
              "X-Total-Count" : {
                "description" : "The total number of resources that are available",
                "schema" : {
                  "type" : "integer"
                }
              }
            }
          },
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/imsx_StatusInfo.Type"
                }
              }
            },
            "description" : "StatusInfo Error Report"
          }
        },
        "summary" : "The REST read request message for the getTermsForSchool() API call.",
        "tags" : [ "TermsManagement" ]
      }
    },
    "/schools/{sourcedId}" : {
      "get" : {
        "description" : "...not supplied...",
        "operationId" : "getSchool",
        "parameters" : [ {
          "description" : "...tbd...",
          "in" : "path",
          "name" : "sourcedId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SingleOrg.Type"
                }
              }
            },
            "description" : "...tbd...",
            "headers" : {
              "X-Total-Count" : {
                "description" : "The total number of resources that are available",
                "schema" : {
                  "type" : "integer"
                }
              }
            }
          },
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/imsx_StatusInfo.Type"
                }
              }
            },
            "description" : "StatusInfo Error Report"
          }
        },
        "summary" : "The REST read request message for the getSchool() API call.",
        "tags" : [ "SchoolsManagement" ]
      }
    },
    "/students" : {
      "get" : {
        "description" : "...not supplied...",
        "operationId" : "getStudents",
        "parameters" : [ {
          "allowEmptyValue" : false,
          "description" : "To define the download segmentation value i.e. the maximum number of records to be contained in the response.",
          "in" : "query",
          "name" : "limit",
          "schema" : {
            "default" : 100,
            "format" : "int32",
            "minimum" : 1,
            "type" : "integer"
          }
        }, {
          "allowEmptyValue" : false,
          "description" : "The number of the first record to be supplied in the segmented response message.",
          "in" : "query",
          "name" : "offset",
          "schema" : {
            "default" : 0,
            "format" : "int32",
            "minimum" : 0,
            "type" : "integer"
          }
        }, {
          "allowEmptyValue" : false,
          "description" : "Allows the client to resume retrieving results from where the previous page left off",
          "in" : "query",
          "name" : "continuationToken",
          "schema" : {
            "type" : "string"
          }
        }, {
          "allowEmptyValue" : false,
          "description" : "Identifies the sort criteria to be used for the records in the response message. Use with the orderBy parameter.",
          "in" : "query",
          "name" : "sort",
          "schema" : {
            "type" : "string"
          }
        }, {
          "allowEmptyValue" : false,
          "description" : "The form of ordering for response to the sorted request i.e. ascending (asc) or descending (desc).",
          "in" : "query",
          "name" : "orderBy",
          "schema" : {
            "enum" : [ "acs", "desc" ],
            "type" : "string"
          }
        }, {
          "allowEmptyValue" : false,
          "description" : "The filtering rules to be applied when identifying the records to be supplied in the response message.",
          "in" : "query",
          "name" : "filter",
          "schema" : {
            "type" : "string"
          }
        }, {
          "allowEmptyValue" : false,
          "description" : "To identify the range of fields that should be supplied in the response message.",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Users.Type"
                }
              }
            },
            "description" : "...tbd...",
            "headers" : {
              "X-Total-Count" : {
                "description" : "The total number of resources that are available",
                "schema" : {
                  "type" : "integer"
                }
              }
            }
          },
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/imsx_StatusInfo.Type"
                }
              }
            },
            "description" : "StatusInfo Error Report"
          }
        },
        "summary" : "The REST read request message for the getStudents() API call.",
        "tags" : [ "StudentsManagement" ]
      }
    },
    "/students/{sourcedId}" : {
      "get" : {
        "description" : "...not supplied...",
        "operationId" : "getStudent",
        "parameters" : [ {
          "description" : "...tbd...",
          "in" : "path",
          "name" : "sourcedId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SingleUser.Type"
                }
              }
            },
            "description" : "...tbd...",
            "headers" : {
              "X-Total-Count" : {
                "description" : "The total number of resources that are available",
                "schema" : {
                  "type" : "integer"
                }
              }
            }
          },
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/imsx_StatusInfo.Type"
                }
              }
            },
            "description" : "StatusInfo Error Report"
          }
        },
        "summary" : "The REST read request message for the getStudent() API call.",
        "tags" : [ "StudentsManagement" ]
      }
    },
    "/students/{studentSourcedId}/classes" : {
      "get" : {
        "description" : "...not supplied...",
        "operationId" : "getClassesForStudent",
        "parameters" : [ {
          "description" : "...tbd...",
          "in" : "path",
          "name" : "studentSourcedId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "allowEmptyValue" : false,
          "description" : "To define the download segmentation value i.e. the maximum number of records to be contained in the response.",
          "in" : "query",
          "name" : "limit",
          "schema" : {
            "default" : 100,
            "format" : "int32",
            "minimum" : 1,
            "type" : "integer"
          }
        }, {
          "allowEmptyValue" : false,
          "description" : "The number of the first record to be supplied in the segmented response message.",
          "in" : "query",
          "name" : "offset",
          "schema" : {
            "default" : 0,
            "format" : "int32",
            "minimum" : 0,
            "type" : "integer"
          }
        }, {
          "allowEmptyValue" : false,
          "description" : "Allows the client to resume retrieving results from where the previous page left off",
          "in" : "query",
          "name" : "continuationToken",
          "schema" : {
            "type" : "string"
          }
        }, {
          "allowEmptyValue" : false,
          "description" : "Identifies the sort criteria to be used for the records in the response message. Use with the orderBy parameter.",
          "in" : "query",
          "name" : "sort",
          "schema" : {
            "type" : "string"
          }
        }, {
          "allowEmptyValue" : false,
          "description" : "The form of ordering for response to the sorted request i.e. ascending (asc) or descending (desc).",
          "in" : "query",
          "name" : "orderBy",
          "schema" : {
            "enum" : [ "acs", "desc" ],
            "type" : "string"
          }
        }, {
          "allowEmptyValue" : false,
          "description" : "The filtering rules to be applied when identifying the records to be supplied in the response message.",
          "in" : "query",
          "name" : "filter",
          "schema" : {
            "type" : "string"
          }
        }, {
          "allowEmptyValue" : false,
          "description" : "To identify the range of fields that should be supplied in the response message.",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Classes.Type"
                }
              }
            },
            "description" : "...tbd...",
            "headers" : {
              "X-Total-Count" : {
                "description" : "The total number of resources that are available",
                "schema" : {
                  "type" : "integer"
                }
              }
            }
          },
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/imsx_StatusInfo.Type"
                }
              }
            },
            "description" : "StatusInfo Error Report"
          }
        },
        "summary" : "The REST read request message for the getClassesForStudent() API call.",
        "tags" : [ "ClassesManagement" ]
      }
    },
    "/teachers" : {
      "get" : {
        "description" : "...not supplied...",
        "operationId" : "getTeachers",
        "parameters" : [ {
          "allowEmptyValue" : false,
          "description" : "To define the download segmentation value i.e. the maximum number of records to be contained in the response.",
          "in" : "query",
          "name" : "limit",
          "schema" : {
            "default" : 100,
            "format" : "int32",
            "minimum" : 1,
            "type" : "integer"
          }
        }, {
          "allowEmptyValue" : false,
          "description" : "The number of the first record to be supplied in the segmented response message.",
          "in" : "query",
          "name" : "offset",
          "schema" : {
            "default" : 0,
            "format" : "int32",
            "minimum" : 0,
            "type" : "integer"
          }
        }, {
          "allowEmptyValue" : false,
          "description" : "Allows the client to resume retrieving results from where the previous page left off",
          "in" : "query",
          "name" : "continuationToken",
          "schema" : {
            "type" : "string"
          }
        }, {
          "allowEmptyValue" : false,
          "description" : "Identifies the sort criteria to be used for the records in the response message. Use with the orderBy parameter.",
          "in" : "query",
          "name" : "sort",
          "schema" : {
            "type" : "string"
          }
        }, {
          "allowEmptyValue" : false,
          "description" : "The form of ordering for response to the sorted request i.e. ascending (asc) or descending (desc).",
          "in" : "query",
          "name" : "orderBy",
          "schema" : {
            "enum" : [ "acs", "desc" ],
            "type" : "string"
          }
        }, {
          "allowEmptyValue" : false,
          "description" : "The filtering rules to be applied when identifying the records to be supplied in the response message.",
          "in" : "query",
          "name" : "filter",
          "schema" : {
            "type" : "string"
          }
        }, {
          "allowEmptyValue" : false,
          "description" : "To identify the range of fields that should be supplied in the response message.",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Users.Type"
                }
              }
            },
            "description" : "...tbd...",
            "headers" : {
              "X-Total-Count" : {
                "description" : "The total number of resources that are available",
                "schema" : {
                  "type" : "integer"
                }
              }
            }
          },
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/imsx_StatusInfo.Type"
                }
              }
            },
            "description" : "StatusInfo Error Report"
          }
        },
        "summary" : "The REST read request message for the getTeachers() API call.",
        "tags" : [ "TeachersManagement" ]
      }
    },
    "/teachers/{sourcedId}" : {
      "get" : {
        "description" : "...not supplied...",
        "operationId" : "getTeacher",
        "parameters" : [ {
          "description" : "...tbd...",
          "in" : "path",
          "name" : "sourcedId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SingleUser.Type"
                }
              }
            },
            "description" : "...tbd...",
            "headers" : {
              "X-Total-Count" : {
                "description" : "The total number of resources that are available",
                "schema" : {
                  "type" : "integer"
                }
              }
            }
          },
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/imsx_StatusInfo.Type"
                }
              }
            },
            "description" : "StatusInfo Error Report"
          }
        },
        "summary" : "The REST read request message for the getTeacher() API call.",
        "tags" : [ "TeachersManagement" ]
      }
    },
    "/teachers/{teacherSourcedId}/classes" : {
      "get" : {
        "description" : "...not supplied...",
        "operationId" : "getClassesForTeacher",
        "parameters" : [ {
          "description" : "...tbd...",
          "in" : "path",
          "name" : "teacherSourcedId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "allowEmptyValue" : false,
          "description" : "To define the download segmentation value i.e. the maximum number of records to be contained in the response.",
          "in" : "query",
          "name" : "limit",
          "schema" : {
            "default" : 100,
            "format" : "int32",
            "minimum" : 1,
            "type" : "integer"
          }
        }, {
          "allowEmptyValue" : false,
          "description" : "The number of the first record to be supplied in the segmented response message.",
          "in" : "query",
          "name" : "offset",
          "schema" : {
            "default" : 0,
            "format" : "int32",
            "minimum" : 0,
            "type" : "integer"
          }
        }, {
          "allowEmptyValue" : false,
          "description" : "Allows the client to resume retrieving results from where the previous page left off",
          "in" : "query",
          "name" : "continuationToken",
          "schema" : {
            "type" : "string"
          }
        }, {
          "allowEmptyValue" : false,
          "description" : "Identifies the sort criteria to be used for the records in the response message. Use with the orderBy parameter.",
          "in" : "query",
          "name" : "sort",
          "schema" : {
            "type" : "string"
          }
        }, {
          "allowEmptyValue" : false,
          "description" : "The form of ordering for response to the sorted request i.e. ascending (asc) or descending (desc).",
          "in" : "query",
          "name" : "orderBy",
          "schema" : {
            "enum" : [ "acs", "desc" ],
            "type" : "string"
          }
        }, {
          "allowEmptyValue" : false,
          "description" : "The filtering rules to be applied when identifying the records to be supplied in the response message.",
          "in" : "query",
          "name" : "filter",
          "schema" : {
            "type" : "string"
          }
        }, {
          "allowEmptyValue" : false,
          "description" : "To identify the range of fields that should be supplied in the response message.",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Classes.Type"
                }
              }
            },
            "description" : "...tbd...",
            "headers" : {
              "X-Total-Count" : {
                "description" : "The total number of resources that are available",
                "schema" : {
                  "type" : "integer"
                }
              }
            }
          },
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/imsx_StatusInfo.Type"
                }
              }
            },
            "description" : "StatusInfo Error Report"
          }
        },
        "summary" : "The REST read request message for the getClassesForTeacher() API call.",
        "tags" : [ "ClassesManagement" ]
      }
    },
    "/terms" : {
      "get" : {
        "description" : "...not supplied...",
        "operationId" : "getTerms",
        "parameters" : [ {
          "allowEmptyValue" : false,
          "description" : "To define the download segmentation value i.e. the maximum number of records to be contained in the response.",
          "in" : "query",
          "name" : "limit",
          "schema" : {
            "default" : 100,
            "format" : "int32",
            "minimum" : 1,
            "type" : "integer"
          }
        }, {
          "allowEmptyValue" : false,
          "description" : "The number of the first record to be supplied in the segmented response message.",
          "in" : "query",
          "name" : "offset",
          "schema" : {
            "default" : 0,
            "format" : "int32",
            "minimum" : 0,
            "type" : "integer"
          }
        }, {
          "allowEmptyValue" : false,
          "description" : "Allows the client to resume retrieving results from where the previous page left off",
          "in" : "query",
          "name" : "continuationToken",
          "schema" : {
            "type" : "string"
          }
        }, {
          "allowEmptyValue" : false,
          "description" : "Identifies the sort criteria to be used for the records in the response message. Use with the orderBy parameter.",
          "in" : "query",
          "name" : "sort",
          "schema" : {
            "type" : "string"
          }
        }, {
          "allowEmptyValue" : false,
          "description" : "The form of ordering for response to the sorted request i.e. ascending (asc) or descending (desc).",
          "in" : "query",
          "name" : "orderBy",
          "schema" : {
            "enum" : [ "acs", "desc" ],
            "type" : "string"
          }
        }, {
          "allowEmptyValue" : false,
          "description" : "The filtering rules to be applied when identifying the records to be supplied in the response message.",
          "in" : "query",
          "name" : "filter",
          "schema" : {
            "type" : "string"
          }
        }, {
          "allowEmptyValue" : false,
          "description" : "To identify the range of fields that should be supplied in the response message.",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MultipleAcademicSessions.Type"
                }
              }
            },
            "description" : "...tbd...",
            "headers" : {
              "X-Total-Count" : {
                "description" : "The total number of resources that are available",
                "schema" : {
                  "type" : "integer"
                }
              }
            }
          },
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/imsx_StatusInfo.Type"
                }
              }
            },
            "description" : "StatusInfo Error Report"
          }
        },
        "summary" : "The REST read request message for the getTerms() API call.",
        "tags" : [ "TermsManagement" ]
      }
    },
    "/terms/{sourcedId}" : {
      "get" : {
        "description" : "...not supplied...",
        "operationId" : "getTerm",
        "parameters" : [ {
          "description" : "...tbd...",
          "in" : "path",
          "name" : "sourcedId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SingleAcademicSession.Type"
                }
              }
            },
            "description" : "...tbd...",
            "headers" : {
              "X-Total-Count" : {
                "description" : "The total number of resources that are available",
                "schema" : {
                  "type" : "integer"
                }
              }
            }
          },
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/imsx_StatusInfo.Type"
                }
              }
            },
            "description" : "StatusInfo Error Report"
          }
        },
        "summary" : "The REST read request message for the getTerm() API call.",
        "tags" : [ "TermsManagement" ]
      }
    },
    "/terms/{termSourcedId}/classes" : {
      "get" : {
        "description" : "...not supplied...",
        "operationId" : "getClassesForTerm",
        "parameters" : [ {
          "description" : "...tbd...",
          "in" : "path",
          "name" : "termSourcedId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "allowEmptyValue" : false,
          "description" : "To define the download segmentation value i.e. the maximum number of records to be contained in the response.",
          "in" : "query",
          "name" : "limit",
          "schema" : {
            "default" : 100,
            "format" : "int32",
            "minimum" : 1,
            "type" : "integer"
          }
        }, {
          "allowEmptyValue" : false,
          "description" : "The number of the first record to be supplied in the segmented response message.",
          "in" : "query",
          "name" : "offset",
          "schema" : {
            "default" : 0,
            "format" : "int32",
            "minimum" : 0,
            "type" : "integer"
          }
        }, {
          "allowEmptyValue" : false,
          "description" : "Allows the client to resume retrieving results from where the previous page left off",
          "in" : "query",
          "name" : "continuationToken",
          "schema" : {
            "type" : "string"
          }
        }, {
          "allowEmptyValue" : false,
          "description" : "Identifies the sort criteria to be used for the records in the response message. Use with the orderBy parameter.",
          "in" : "query",
          "name" : "sort",
          "schema" : {
            "type" : "string"
          }
        }, {
          "allowEmptyValue" : false,
          "description" : "The form of ordering for response to the sorted request i.e. ascending (asc) or descending (desc).",
          "in" : "query",
          "name" : "orderBy",
          "schema" : {
            "enum" : [ "acs", "desc" ],
            "type" : "string"
          }
        }, {
          "allowEmptyValue" : false,
          "description" : "The filtering rules to be applied when identifying the records to be supplied in the response message.",
          "in" : "query",
          "name" : "filter",
          "schema" : {
            "type" : "string"
          }
        }, {
          "allowEmptyValue" : false,
          "description" : "To identify the range of fields that should be supplied in the response message.",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Classes.Type"
                }
              }
            },
            "description" : "...tbd...",
            "headers" : {
              "X-Total-Count" : {
                "description" : "The total number of resources that are available",
                "schema" : {
                  "type" : "integer"
                }
              }
            }
          },
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/imsx_StatusInfo.Type"
                }
              }
            },
            "description" : "StatusInfo Error Report"
          }
        },
        "summary" : "The REST read request message for the getClassesForTerm() API call.",
        "tags" : [ "ClassesManagement" ]
      }
    },
    "/terms/{termSourcedId}/gradingPeriods" : {
      "get" : {
        "description" : "...not supplied...",
        "operationId" : "getGradingPeriodsForTerm",
        "parameters" : [ {
          "description" : "...tbd...",
          "in" : "path",
          "name" : "termSourcedId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "allowEmptyValue" : false,
          "description" : "To define the download segmentation value i.e. the maximum number of records to be contained in the response.",
          "in" : "query",
          "name" : "limit",
          "schema" : {
            "default" : 100,
            "format" : "int32",
            "minimum" : 1,
            "type" : "integer"
          }
        }, {
          "allowEmptyValue" : false,
          "description" : "The number of the first record to be supplied in the segmented response message.",
          "in" : "query",
          "name" : "offset",
          "schema" : {
            "default" : 0,
            "format" : "int32",
            "minimum" : 0,
            "type" : "integer"
          }
        }, {
          "allowEmptyValue" : false,
          "description" : "Allows the client to resume retrieving results from where the previous page left off",
          "in" : "query",
          "name" : "continuationToken",
          "schema" : {
            "type" : "string"
          }
        }, {
          "allowEmptyValue" : false,
          "description" : "Identifies the sort criteria to be used for the records in the response message. Use with the orderBy parameter.",
          "in" : "query",
          "name" : "sort",
          "schema" : {
            "type" : "string"
          }
        }, {
          "allowEmptyValue" : false,
          "description" : "The form of ordering for response to the sorted request i.e. ascending (asc) or descending (desc).",
          "in" : "query",
          "name" : "orderBy",
          "schema" : {
            "enum" : [ "acs", "desc" ],
            "type" : "string"
          }
        }, {
          "allowEmptyValue" : false,
          "description" : "The filtering rules to be applied when identifying the records to be supplied in the response message.",
          "in" : "query",
          "name" : "filter",
          "schema" : {
            "type" : "string"
          }
        }, {
          "allowEmptyValue" : false,
          "description" : "To identify the range of fields that should be supplied in the response message.",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MultipleAcademicSessions.Type"
                }
              }
            },
            "description" : "...tbd...",
            "headers" : {
              "X-Total-Count" : {
                "description" : "The total number of resources that are available",
                "schema" : {
                  "type" : "integer"
                }
              }
            }
          },
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/imsx_StatusInfo.Type"
                }
              }
            },
            "description" : "StatusInfo Error Report"
          }
        },
        "summary" : "The REST read request message for the getGradingPeriodsForTerm() API call.",
        "tags" : [ "GradingPeriodsManagement" ]
      }
    },
    "/users" : {
      "get" : {
        "description" : "...not supplied...",
        "operationId" : "getUsers",
        "parameters" : [ {
          "allowEmptyValue" : false,
          "description" : "To define the download segmentation value i.e. the maximum number of records to be contained in the response.",
          "in" : "query",
          "name" : "limit",
          "schema" : {
            "default" : 100,
            "format" : "int32",
            "minimum" : 1,
            "type" : "integer"
          }
        }, {
          "allowEmptyValue" : false,
          "description" : "The number of the first record to be supplied in the segmented response message.",
          "in" : "query",
          "name" : "offset",
          "schema" : {
            "default" : 0,
            "format" : "int32",
            "minimum" : 0,
            "type" : "integer"
          }
        }, {
          "allowEmptyValue" : false,
          "description" : "Allows the client to resume retrieving results from where the previous page left off",
          "in" : "query",
          "name" : "continuationToken",
          "schema" : {
            "type" : "string"
          }
        }, {
          "allowEmptyValue" : false,
          "description" : "Identifies the sort criteria to be used for the records in the response message. Use with the orderBy parameter.",
          "in" : "query",
          "name" : "sort",
          "schema" : {
            "type" : "string"
          }
        }, {
          "allowEmptyValue" : false,
          "description" : "The form of ordering for response to the sorted request i.e. ascending (asc) or descending (desc).",
          "in" : "query",
          "name" : "orderBy",
          "schema" : {
            "enum" : [ "acs", "desc" ],
            "type" : "string"
          }
        }, {
          "allowEmptyValue" : false,
          "description" : "The filtering rules to be applied when identifying the records to be supplied in the response message.",
          "in" : "query",
          "name" : "filter",
          "schema" : {
            "type" : "string"
          }
        }, {
          "allowEmptyValue" : false,
          "description" : "To identify the range of fields that should be supplied in the response message.",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Users.Type"
                }
              }
            },
            "description" : "...tbd...",
            "headers" : {
              "X-Total-Count" : {
                "description" : "The total number of resources that are available",
                "schema" : {
                  "type" : "integer"
                }
              }
            }
          },
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/imsx_StatusInfo.Type"
                }
              }
            },
            "description" : "StatusInfo Error Report"
          }
        },
        "summary" : "The REST read request message for the getUsers() API call.",
        "tags" : [ "UsersManagement" ]
      }
    },
    "/users/{sourcedId}" : {
      "get" : {
        "description" : "...not supplied...",
        "operationId" : "getUser",
        "parameters" : [ {
          "description" : "...tbd...",
          "in" : "path",
          "name" : "sourcedId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SingleUser.Type"
                }
              }
            },
            "description" : "...tbd...",
            "headers" : {
              "X-Total-Count" : {
                "description" : "The total number of resources that are available",
                "schema" : {
                  "type" : "integer"
                }
              }
            }
          },
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/imsx_StatusInfo.Type"
                }
              }
            },
            "description" : "StatusInfo Error Report"
          }
        },
        "summary" : "The REST read request message for the getUser() API call.",
        "tags" : [ "UsersManagement" ]
      }
    },
    "/users/{userSourcedId}/classes" : {
      "get" : {
        "description" : "...not supplied...",
        "operationId" : "getClassesForUser",
        "parameters" : [ {
          "description" : "...tbd...",
          "in" : "path",
          "name" : "userSourcedId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "allowEmptyValue" : false,
          "description" : "To define the download segmentation value i.e. the maximum number of records to be contained in the response.",
          "in" : "query",
          "name" : "limit",
          "schema" : {
            "default" : 100,
            "format" : "int32",
            "minimum" : 1,
            "type" : "integer"
          }
        }, {
          "allowEmptyValue" : false,
          "description" : "The number of the first record to be supplied in the segmented response message.",
          "in" : "query",
          "name" : "offset",
          "schema" : {
            "default" : 0,
            "format" : "int32",
            "minimum" : 0,
            "type" : "integer"
          }
        }, {
          "allowEmptyValue" : false,
          "description" : "Allows the client to resume retrieving results from where the previous page left off",
          "in" : "query",
          "name" : "continuationToken",
          "schema" : {
            "type" : "string"
          }
        }, {
          "allowEmptyValue" : false,
          "description" : "Identifies the sort criteria to be used for the records in the response message. Use with the orderBy parameter.",
          "in" : "query",
          "name" : "sort",
          "schema" : {
            "type" : "string"
          }
        }, {
          "allowEmptyValue" : false,
          "description" : "The form of ordering for response to the sorted request i.e. ascending (asc) or descending (desc).",
          "in" : "query",
          "name" : "orderBy",
          "schema" : {
            "enum" : [ "acs", "desc" ],
            "type" : "string"
          }
        }, {
          "allowEmptyValue" : false,
          "description" : "The filtering rules to be applied when identifying the records to be supplied in the response message.",
          "in" : "query",
          "name" : "filter",
          "schema" : {
            "type" : "string"
          }
        }, {
          "allowEmptyValue" : false,
          "description" : "To identify the range of fields that should be supplied in the response message.",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Classes.Type"
                }
              }
            },
            "description" : "...tbd...",
            "headers" : {
              "X-Total-Count" : {
                "description" : "The total number of resources that are available",
                "schema" : {
                  "type" : "integer"
                }
              }
            }
          },
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/imsx_StatusInfo.Type"
                }
              }
            },
            "description" : "StatusInfo Error Report"
          }
        },
        "summary" : "The REST read request message for the getClassesForUser() API call.",
        "tags" : [ "ClassesManagement" ]
      }
    }
  },
  "components" : {
    "schemas" : {
      "AcademicSession.Type" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/Base.Type"
        }, {
          "$ref" : "#/components/schemas/AcademicSession_Type_allOf"
        } ],
        "description" : "...tbd (Class description)..."
      },
      "MultipleAcademicSessions.Type" : {
        "description" : "...tbd (Class description)...",
        "example" : {
          "academicSessions" : [ null, null ]
        },
        "properties" : {
          "academicSessions" : {
            "items" : {
              "$ref" : "#/components/schemas/AcademicSession.Type"
            },
            "minItems" : 0,
            "type" : "array"
          }
        },
        "type" : "object"
      },
      "Base.Type" : {
        "description" : "...tbd (Class description)...",
        "properties" : {
          "sourcedId" : {
            "description" : "...tbd (Class description)...",
            "type" : "string"
          },
          "status" : {
            "enum" : [ "active", "tobedeleted" ],
            "type" : "string"
          },
          "dateLastModified" : {
            "description" : "Model Primitive Datatype = DateTime",
            "format" : "date-time",
            "type" : "string"
          },
          "metadata" : {
            "description" : "...tbd (Class description)...",
            "type" : "object"
          }
        },
        "required" : [ "dateLastModified", "sourcedId", "status" ],
        "type" : "object"
      },
      "Categories.Type" : {
        "description" : "...tbd (Class description)...",
        "example" : {
          "categories" : [ null, null ]
        },
        "properties" : {
          "categories" : {
            "items" : {
              "$ref" : "#/components/schemas/Category.Type"
            },
            "minItems" : 0,
            "type" : "array"
          }
        },
        "type" : "object"
      },
      "Category.Type" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/Base.Type"
        }, {
          "$ref" : "#/components/schemas/Category_Type_allOf"
        } ],
        "description" : "...tbd (Class description)..."
      },
      "Class.Type" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/Base.Type"
        }, {
          "$ref" : "#/components/schemas/Class_Type_allOf"
        } ],
        "description" : "...tbd (Class description)..."
      },
      "Classes.Type" : {
        "description" : "...tbd (Class description)...",
        "example" : {
          "classes" : [ null, null ]
        },
        "properties" : {
          "classes" : {
            "items" : {
              "$ref" : "#/components/schemas/Class.Type"
            },
            "minItems" : 0,
            "type" : "array"
          }
        },
        "type" : "object"
      },
      "Course.Type" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/Base.Type"
        }, {
          "$ref" : "#/components/schemas/Course_Type_allOf"
        } ],
        "description" : "...tbd (Class description)..."
      },
      "Courses.Type" : {
        "description" : "...tbd (Class description)...",
        "example" : {
          "courses" : [ null, null ]
        },
        "properties" : {
          "courses" : {
            "items" : {
              "$ref" : "#/components/schemas/Course.Type"
            },
            "minItems" : 0,
            "type" : "array"
          }
        },
        "type" : "object"
      },
      "Demographic.Type" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/Base.Type"
        }, {
          "$ref" : "#/components/schemas/Demographic_Type_allOf"
        } ],
        "description" : "...tbd (Class description)..."
      },
      "Demographics.Type" : {
        "description" : "...tbd (Class description)...",
        "example" : {
          "demographics" : [ null, null ]
        },
        "properties" : {
          "demographics" : {
            "items" : {
              "$ref" : "#/components/schemas/Demographic.Type"
            },
            "minItems" : 0,
            "type" : "array"
          }
        },
        "type" : "object"
      },
      "Enrollment.Type" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/Base.Type"
        }, {
          "$ref" : "#/components/schemas/Enrollment_Type_allOf"
        } ],
        "description" : "...tbd (Class description)..."
      },
      "Enrollments.Type" : {
        "description" : "...tbd (Class description)...",
        "example" : {
          "enrollments" : [ null, null ]
        },
        "properties" : {
          "enrollments" : {
            "items" : {
              "$ref" : "#/components/schemas/Enrollment.Type"
            },
            "minItems" : 0,
            "type" : "array"
          }
        },
        "type" : "object"
      },
      "GUID.Type" : {
        "description" : "...tbd (Class description)...",
        "type" : "string"
      },
      "GUIDRef.Type" : {
        "description" : "...tbd (Class description)...",
        "properties" : {
          "href" : {
            "description" : "Model Primitive Datatype = AnyURI",
            "format" : "uri",
            "type" : "string"
          },
          "sourcedId" : {
            "description" : "...tbd (Class description)...",
            "type" : "string"
          },
          "type" : {
            "enum" : [ "academicSession", "category", "class", "course", "demographics", "enrollment", "lineItem", "org", "resource", "result", "student", "teacher", "user", "term", "gradingPeriod" ],
            "type" : "string"
          }
        },
        "required" : [ "href", "sourcedId", "type" ],
        "type" : "object"
      },
      "Identifier.Type" : {
        "description" : "...tbd (Class description)...",
        "type" : "string"
      },
      "LineItem.Type" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/Base.Type"
        }, {
          "$ref" : "#/components/schemas/LineItem_Type_allOf"
        } ],
        "description" : "...tbd (Class description)..."
      },
      "LineItems.Type" : {
        "description" : "...tbd (Class description)...",
        "example" : {
          "lineItems" : [ null, null ]
        },
        "properties" : {
          "lineItems" : {
            "items" : {
              "$ref" : "#/components/schemas/LineItem.Type"
            },
            "minItems" : 0,
            "type" : "array"
          }
        },
        "type" : "object"
      },
      "Metadata.Type" : {
        "description" : "...tbd (Class description)...",
        "type" : "object"
      },
      "Org.Type" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/Base.Type"
        }, {
          "$ref" : "#/components/schemas/Org_Type_allOf"
        } ],
        "description" : "...tbd (Class description)..."
      },
      "Orgs.Type" : {
        "description" : "...tbd (Class description)...",
        "example" : {
          "orgs" : [ null, null ]
        },
        "properties" : {
          "orgs" : {
            "items" : {
              "$ref" : "#/components/schemas/Org.Type"
            },
            "minItems" : 0,
            "type" : "array"
          }
        },
        "type" : "object"
      },
      "Resource.Type" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/Base.Type"
        }, {
          "$ref" : "#/components/schemas/Resource_Type_allOf"
        } ],
        "description" : "...tbd (Class description)..."
      },
      "Resources.Type" : {
        "description" : "...tbd (Class description)...",
        "example" : {
          "resources" : [ null, null ]
        },
        "properties" : {
          "resources" : {
            "items" : {
              "$ref" : "#/components/schemas/Resource.Type"
            },
            "minItems" : 0,
            "type" : "array"
          }
        },
        "type" : "object"
      },
      "Result.Type" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/Base.Type"
        }, {
          "$ref" : "#/components/schemas/Result_Type_allOf"
        } ],
        "description" : "...tbd (Class description)..."
      },
      "Results.Type" : {
        "description" : "...tbd (Class description)...",
        "example" : {
          "results" : [ null, null ]
        },
        "properties" : {
          "results" : {
            "items" : {
              "$ref" : "#/components/schemas/Result.Type"
            },
            "minItems" : 0,
            "type" : "array"
          }
        },
        "type" : "object"
      },
      "SingleAcademicSession.Type" : {
        "description" : "...tbd (Class description)...",
        "example" : { },
        "properties" : {
          "academicSession" : {
            "$ref" : "#/components/schemas/AcademicSession.Type"
          }
        },
        "required" : [ "academicSession" ],
        "type" : "object"
      },
      "SingleCategory.Type" : {
        "description" : "...tbd (Class description)...",
        "example" : { },
        "properties" : {
          "category" : {
            "$ref" : "#/components/schemas/Category.Type"
          }
        },
        "required" : [ "category" ],
        "type" : "object"
      },
      "SingleClass.Type" : {
        "description" : "...tbd (Class description)...",
        "example" : { },
        "properties" : {
          "class" : {
            "$ref" : "#/components/schemas/Class.Type"
          }
        },
        "required" : [ "class" ],
        "type" : "object"
      },
      "SingleCourse.Type" : {
        "description" : "...tbd (Class description)...",
        "example" : { },
        "properties" : {
          "course" : {
            "$ref" : "#/components/schemas/Course.Type"
          }
        },
        "required" : [ "course" ],
        "type" : "object"
      },
      "SingleDemographics.Type" : {
        "description" : "...tbd (Class description)...",
        "example" : { },
        "properties" : {
          "demographics" : {
            "$ref" : "#/components/schemas/Demographic.Type"
          }
        },
        "required" : [ "demographics" ],
        "type" : "object"
      },
      "SingleEnrollment.Type" : {
        "description" : "...tbd (Class description)...",
        "example" : { },
        "properties" : {
          "enrollment" : {
            "$ref" : "#/components/schemas/Enrollment.Type"
          }
        },
        "required" : [ "enrollment" ],
        "type" : "object"
      },
      "SingleLineItem.Type" : {
        "description" : "...tbd (Class description)...",
        "example" : { },
        "properties" : {
          "lineItem" : {
            "$ref" : "#/components/schemas/LineItem.Type"
          }
        },
        "required" : [ "lineItem" ],
        "type" : "object"
      },
      "SingleOrg.Type" : {
        "description" : "...tbd (Class description)...",
        "example" : { },
        "properties" : {
          "org" : {
            "$ref" : "#/components/schemas/Org.Type"
          }
        },
        "required" : [ "org" ],
        "type" : "object"
      },
      "SingleResource.Type" : {
        "description" : "...tbd (Class description)...",
        "example" : { },
        "properties" : {
          "resource" : {
            "$ref" : "#/components/schemas/Resource.Type"
          }
        },
        "required" : [ "resource" ],
        "type" : "object"
      },
      "SingleResult.Type" : {
        "description" : "...tbd (Class description)...",
        "example" : { },
        "properties" : {
          "result" : {
            "$ref" : "#/components/schemas/Result.Type"
          }
        },
        "required" : [ "result" ],
        "type" : "object"
      },
      "SingleUser.Type" : {
        "description" : "...tbd (Class description)...",
        "example" : { },
        "properties" : {
          "user" : {
            "$ref" : "#/components/schemas/User.Type"
          }
        },
        "required" : [ "user" ],
        "type" : "object"
      },
      "User.Type" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/Base.Type"
        }, {
          "$ref" : "#/components/schemas/User_Type_allOf"
        } ],
        "description" : "...tbd (Class description)..."
      },
      "UserId.Type" : {
        "description" : "...tbd (Class description)...",
        "properties" : {
          "type" : {
            "description" : "Model Primitive Datatype = NormalizedString",
            "type" : "string"
          },
          "identifier" : {
            "description" : "...tbd (Class description)...",
            "type" : "string"
          }
        },
        "required" : [ "identifier" ],
        "type" : "object"
      },
      "Users.Type" : {
        "description" : "...tbd (Class description)...",
        "example" : {
          "users" : [ null, null ]
        },
        "properties" : {
          "users" : {
            "items" : {
              "$ref" : "#/components/schemas/User.Type"
            },
            "minItems" : 0,
            "type" : "array"
          }
        },
        "type" : "object"
      },
      "imsx_CodeMinor.Type" : {
        "description" : "...tbd (Class description)...",
        "properties" : {
          "imsx_codeMinorField" : {
            "items" : {
              "$ref" : "#/components/schemas/imsx_CodeMinorField.Type"
            },
            "minItems" : 1,
            "type" : "array"
          }
        },
        "required" : [ "imsx_codeMinorField" ],
        "type" : "object"
      },
      "imsx_CodeMinorField.Type" : {
        "description" : "...tbd (Class description)...",
        "properties" : {
          "imsx_codeMinorFieldName" : {
            "description" : "Model Primitive Datatype = NormalizedString",
            "type" : "string"
          },
          "imsx_codeMinorFieldValue" : {
            "enum" : [ "fullsuccess", "invalid_sort_field", "invalid_selection_field", "invaliddata", "unauthorisedrequest", "linkfailure", "unsupportedoperation", "deletefailure", "unknownobject", "targetreadfailure" ],
            "type" : "string"
          }
        },
        "required" : [ "imsx_codeMinorFieldName", "imsx_codeMinorFieldValue" ],
        "type" : "object"
      },
      "imsx_StatusInfo.Type" : {
        "description" : "...tbd (Class description)...",
        "properties" : {
          "imsx_codeMajor" : {
            "enum" : [ "success", "processing", "failure", "unsupported" ],
            "type" : "string"
          },
          "imsx_severity" : {
            "enum" : [ "status", "warning", "error" ],
            "type" : "string"
          },
          "imsx_messageRefIdentifier" : {
            "description" : "Model Primitive Datatype = NormalizedString",
            "type" : "string"
          },
          "imsx_operationRefIdentifier" : {
            "description" : "Model Primitive Datatype = NormalizedString",
            "items" : {
              "type" : "string"
            },
            "minItems" : 0,
            "type" : "array"
          },
          "imsx_description" : {
            "description" : "Model Primitive Datatype = String",
            "type" : "string"
          },
          "imsx_CodeMinor" : {
            "$ref" : "#/components/schemas/imsx_CodeMinor.Type"
          }
        },
        "required" : [ "imsx_codeMajor", "imsx_messageRefIdentifier", "imsx_severity" ],
        "type" : "object"
      },
      "AcademicSession_Type_allOf" : {
        "properties" : {
          "title" : {
            "description" : "Model Primitive Datatype = NormalizedString",
            "type" : "string"
          },
          "startDate" : {
            "description" : "Model Primitive Datatype = Date",
            "format" : "date",
            "type" : "string"
          },
          "endDate" : {
            "description" : "Model Primitive Datatype = Date",
            "format" : "date",
            "type" : "string"
          },
          "type" : {
            "enum" : [ "gradingPeriod", "semester", "schoolYear", "term" ],
            "type" : "string"
          },
          "parent" : {
            "$ref" : "#/components/schemas/GUIDRef.Type"
          },
          "children" : {
            "items" : {
              "$ref" : "#/components/schemas/GUIDRef.Type"
            },
            "minItems" : 0,
            "type" : "array"
          },
          "schoolYear" : {
            "description" : "Model Primitive Datatype = NormalizedString",
            "type" : "string"
          }
        },
        "required" : [ "endDate", "schoolYear", "startDate", "title", "type" ],
        "type" : "object"
      },
      "Category_Type_allOf" : {
        "properties" : {
          "title" : {
            "description" : "Model Primitive Datatype = NormalizedString",
            "type" : "string"
          }
        },
        "required" : [ "title" ],
        "type" : "object"
      },
      "Class_Type_allOf" : {
        "properties" : {
          "title" : {
            "description" : "Model Primitive Datatype = NormalizedString",
            "type" : "string"
          },
          "classCode" : {
            "description" : "Model Primitive Datatype = NormalizedString",
            "type" : "string"
          },
          "classType" : {
            "enum" : [ "homeroom", "scheduled" ],
            "type" : "string"
          },
          "location" : {
            "description" : "Model Primitive Datatype = NormalizedString",
            "type" : "string"
          },
          "grades" : {
            "description" : "Model Primitive Datatype = NormalizedString",
            "items" : {
              "type" : "string"
            },
            "minItems" : 0,
            "type" : "array"
          },
          "subjects" : {
            "description" : "Model Primitive Datatype = NormalizedString",
            "items" : {
              "type" : "string"
            },
            "minItems" : 0,
            "type" : "array"
          },
          "course" : {
            "$ref" : "#/components/schemas/GUIDRef.Type"
          },
          "school" : {
            "$ref" : "#/components/schemas/GUIDRef.Type"
          },
          "terms" : {
            "items" : {
              "$ref" : "#/components/schemas/GUIDRef.Type"
            },
            "minItems" : 0,
            "type" : "array"
          },
          "subjectCodes" : {
            "description" : "Model Primitive Datatype = NormalizedString",
            "items" : {
              "type" : "string"
            },
            "minItems" : 0,
            "type" : "array"
          },
          "periods" : {
            "description" : "Model Primitive Datatype = NormalizedString",
            "type" : "string"
          },
          "resources" : {
            "items" : {
              "$ref" : "#/components/schemas/GUIDRef.Type"
            },
            "minItems" : 0,
            "type" : "array"
          }
        },
        "required" : [ "school", "title" ],
        "type" : "object"
      },
      "Course_Type_allOf" : {
        "properties" : {
          "title" : {
            "description" : "Model Primitive Datatype = NormalizedString",
            "type" : "string"
          },
          "schoolYear" : {
            "$ref" : "#/components/schemas/GUIDRef.Type"
          },
          "courseCode" : {
            "description" : "Model Primitive Datatype = NormalizedString",
            "type" : "string"
          },
          "grades" : {
            "description" : "Model Primitive Datatype = NormalizedString",
            "items" : {
              "type" : "string"
            },
            "minItems" : 0,
            "type" : "array"
          },
          "subjects" : {
            "description" : "Model Primitive Datatype = NormalizedString",
            "items" : {
              "type" : "string"
            },
            "minItems" : 0,
            "type" : "array"
          },
          "org" : {
            "$ref" : "#/components/schemas/GUIDRef.Type"
          },
          "subjectCodes" : {
            "description" : "Model Primitive Datatype = NormalizedString",
            "items" : {
              "type" : "string"
            },
            "minItems" : 0,
            "type" : "array"
          },
          "resources" : {
            "items" : {
              "$ref" : "#/components/schemas/GUIDRef.Type"
            },
            "minItems" : 0,
            "type" : "array"
          }
        },
        "required" : [ "courseCode", "title" ],
        "type" : "object"
      },
      "Demographic_Type_allOf" : {
        "properties" : {
          "birthDate" : {
            "description" : "Model Primitive Datatype = Date",
            "format" : "date",
            "type" : "string"
          },
          "sex" : {
            "enum" : [ "male", "female" ],
            "type" : "string"
          },
          "americanIndianOrAlsakaNative" : {
            "description" : "Model Primitive Datatype = Boolean",
            "type" : "boolean"
          },
          "asian" : {
            "description" : "Model Primitive Datatype = Boolean",
            "type" : "boolean"
          },
          "blackOrAfricanAmerican" : {
            "description" : "Model Primitive Datatype = Boolean",
            "type" : "boolean"
          },
          "nativeHawaiianOrOtherPacificIslander" : {
            "description" : "Model Primitive Datatype = Boolean",
            "type" : "boolean"
          },
          "white" : {
            "description" : "Model Primitive Datatype = Boolean",
            "type" : "boolean"
          },
          "demographicRaceTwoOrMoreRaces" : {
            "description" : "Model Primitive Datatype = Boolean",
            "type" : "boolean"
          },
          "hispanicOrLatinoEthnicity" : {
            "description" : "Model Primitive Datatype = Boolean",
            "type" : "boolean"
          },
          "countryOfBirthCode" : {
            "description" : "Model Primitive Datatype = NormalizedString",
            "type" : "string"
          },
          "stateOfBirthAbbreviation" : {
            "description" : "Model Primitive Datatype = NormalizedString",
            "type" : "string"
          },
          "cityOfBirth" : {
            "description" : "Model Primitive Datatype = NormalizedString",
            "type" : "string"
          },
          "publicSchoolResidenceStatus" : {
            "description" : "Model Primitive Datatype = NormalizedString",
            "type" : "string"
          }
        },
        "type" : "object"
      },
      "Enrollment_Type_allOf" : {
        "properties" : {
          "user" : {
            "$ref" : "#/components/schemas/GUIDRef.Type"
          },
          "class" : {
            "$ref" : "#/components/schemas/GUIDRef.Type"
          },
          "school" : {
            "$ref" : "#/components/schemas/GUIDRef.Type"
          },
          "role" : {
            "enum" : [ "administrator", "aide", "guardian", "parent", "proctor", "relative", "student", "teacher" ],
            "type" : "string"
          },
          "primary" : {
            "description" : "Model Primitive Datatype = Boolean",
            "type" : "boolean"
          },
          "beginDate" : {
            "description" : "Model Primitive Datatype = Date",
            "format" : "date",
            "type" : "string"
          },
          "endDate" : {
            "description" : "Model Primitive Datatype = Date",
            "format" : "date",
            "type" : "string"
          }
        },
        "required" : [ "class", "role", "school", "user" ],
        "type" : "object"
      },
      "LineItem_Type_allOf" : {
        "properties" : {
          "title" : {
            "description" : "Model Primitive Datatype = NormalizedString",
            "type" : "string"
          },
          "description" : {
            "description" : "Model Primitive Datatype = String",
            "type" : "string"
          },
          "assignDate" : {
            "description" : "Model Primitive Datatype = DateTime",
            "format" : "date-time",
            "type" : "string"
          },
          "dueDate" : {
            "description" : "Model Primitive Datatype = DateTime",
            "format" : "date-time",
            "type" : "string"
          },
          "class" : {
            "$ref" : "#/components/schemas/GUIDRef.Type"
          },
          "category" : {
            "$ref" : "#/components/schemas/GUIDRef.Type"
          },
          "gradingPeriod" : {
            "$ref" : "#/components/schemas/GUIDRef.Type"
          },
          "resultValueMin" : {
            "description" : "Model Primitive Datatype = Float",
            "format" : "float",
            "type" : "number"
          },
          "resultValueMax" : {
            "description" : "Model Primitive Datatype = Float",
            "format" : "float",
            "type" : "number"
          }
        },
        "required" : [ "assignDate", "category", "class", "resultValueMin", "title" ],
        "type" : "object"
      },
      "Org_Type_allOf" : {
        "properties" : {
          "name" : {
            "description" : "Model Primitive Datatype = NormalizedString",
            "type" : "string"
          },
          "type" : {
            "enum" : [ "department", "district", "local", "national", "school", "state" ],
            "type" : "string"
          },
          "identifier" : {
            "description" : "...tbd (Class description)...",
            "type" : "string"
          },
          "parent" : {
            "$ref" : "#/components/schemas/GUIDRef.Type"
          },
          "children" : {
            "items" : {
              "$ref" : "#/components/schemas/GUIDRef.Type"
            },
            "minItems" : 0,
            "type" : "array"
          }
        },
        "required" : [ "identifier", "name", "type" ],
        "type" : "object"
      },
      "Resource_Type_allOf" : {
        "properties" : {
          "title" : {
            "description" : "Model Primitive Datatype = NormalizedString",
            "type" : "string"
          },
          "role" : {
            "enum" : [ "administrator", "aide", "guardian", "parent", "proctor", "relative", "student", "teacher" ],
            "type" : "string"
          },
          "importance" : {
            "enum" : [ "primary", "secondary" ],
            "type" : "string"
          },
          "vendorResourceId" : {
            "description" : "...tbd (Class description)...",
            "type" : "string"
          },
          "vendorId" : {
            "description" : "...tbd (Class description)...",
            "type" : "string"
          },
          "applicationId" : {
            "description" : "...tbd (Class description)...",
            "type" : "string"
          }
        },
        "required" : [ "vendorResourceId" ],
        "type" : "object"
      },
      "Result_Type_allOf" : {
        "properties" : {
          "lineItem" : {
            "$ref" : "#/components/schemas/GUIDRef.Type"
          },
          "student" : {
            "$ref" : "#/components/schemas/GUIDRef.Type"
          },
          "scoreStatus" : {
            "enum" : [ "exempt", "fully graded", "not submitted", "partially graded", "submitted" ],
            "type" : "string"
          },
          "score" : {
            "description" : "Model Primitive Datatype = Float",
            "format" : "float",
            "type" : "number"
          },
          "scoreDate" : {
            "description" : "Model Primitive Datatype = Date",
            "format" : "date",
            "type" : "string"
          },
          "comment" : {
            "description" : "Model Primitive Datatype = String",
            "type" : "string"
          }
        },
        "required" : [ "lineItem", "score", "scoreDate", "scoreStatus", "student" ],
        "type" : "object"
      },
      "User_Type_allOf" : {
        "properties" : {
          "username" : {
            "description" : "Model Primitive Datatype = NormalizedString",
            "type" : "string"
          },
          "userIds" : {
            "items" : {
              "$ref" : "#/components/schemas/UserId.Type"
            },
            "minItems" : 0,
            "type" : "array"
          },
          "enabledUser" : {
            "description" : "Model Primitive Datatype = Boolean",
            "type" : "boolean"
          },
          "givenName" : {
            "description" : "Model Primitive Datatype = NormalizedString",
            "type" : "string"
          },
          "familyName" : {
            "description" : "Model Primitive Datatype = NormalizedString",
            "type" : "string"
          },
          "middleName" : {
            "description" : "Model Primitive Datatype = NormalizedString",
            "type" : "string"
          },
          "role" : {
            "enum" : [ "administrator", "aide", "guardian", "parent", "proctor", "relative", "student", "teacher" ],
            "type" : "string"
          },
          "identifier" : {
            "description" : "...tbd (Class description)...",
            "type" : "string"
          },
          "email" : {
            "description" : "Model Primitive Datatype = NormalizedString",
            "type" : "string"
          },
          "sms" : {
            "description" : "Model Primitive Datatype = NormalizedString",
            "type" : "string"
          },
          "phone" : {
            "description" : "Model Primitive Datatype = NormalizedString",
            "type" : "string"
          },
          "agents" : {
            "items" : {
              "$ref" : "#/components/schemas/GUIDRef.Type"
            },
            "minItems" : 0,
            "type" : "array"
          },
          "orgs" : {
            "items" : {
              "$ref" : "#/components/schemas/GUIDRef.Type"
            },
            "minItems" : 1,
            "type" : "array"
          },
          "grades" : {
            "description" : "Model Primitive Datatype = NormalizedString",
            "items" : {
              "type" : "string"
            },
            "minItems" : 0,
            "type" : "array"
          },
          "password" : {
            "description" : "Model Primitive Datatype = String",
            "type" : "string"
          }
        },
        "required" : [ "familyName", "givenName", "orgs", "role", "username" ],
        "type" : "object"
      }
    },
    "securitySchemes" : {
      "OAuth2Security" : {
        "description" : "The standard usage of OAuth 2.0 by IMS Global",
        "flows" : {
          "clientCredentials" : {
            "scopes" : {
              "StrongMind.Platform.OneRoster.Read" : "Read access to OneRoster resources"
            },
            "tokenUrl" : "https://login.strongmind.com/connect/token"
          }
        },
        "type" : "oauth2"
      }
    }
  },
  "x-original-swagger-version" : "2.0"
}
